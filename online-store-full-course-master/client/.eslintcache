[{"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\index.js":"1","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\App.js":"2","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\store\\UserStore.js":"3","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\AppRouter.js":"4","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\NavBar.js":"5","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\http\\userAPI.js":"6","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\routes.js":"7","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\http\\index.js":"8","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\utils\\consts.js":"9","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Auth.js":"10","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Admin.js":"11","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\Pages.js":"12","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\ImagePage.js":"13","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\ImageList.js":"14","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\ImageItem.js":"15","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\ThemeBar.js":"16","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\FriendBar.js":"17","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\modals\\AddTheme.js":"18","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\modals\\AddFriend.js":"19","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\modals\\CreatePost.js":"20","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Gallery.js":"21","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\store\\ImageStore.js":"22","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\http\\imageAPI.js":"23","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\CommentList.js":"24","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\CommentItem.js":"25"},{"size":457,"mtime":1649520875300,"results":"26","hashOfConfig":"27"},{"size":909,"mtime":1648588061716,"results":"28","hashOfConfig":"27"},{"size":401,"mtime":1611985807000,"results":"29","hashOfConfig":"27"},{"size":801,"mtime":1648406976614,"results":"30","hashOfConfig":"27"},{"size":3541,"mtime":1649452718205,"results":"31","hashOfConfig":"27"},{"size":1102,"mtime":1649448942814,"results":"32","hashOfConfig":"27"},{"size":666,"mtime":1648418183839,"results":"33","hashOfConfig":"27"},{"size":407,"mtime":1611985807000,"results":"34","hashOfConfig":"27"},{"size":225,"mtime":1649018947079,"results":"35","hashOfConfig":"27"},{"size":5659,"mtime":1649286777343,"results":"36","hashOfConfig":"27"},{"size":1556,"mtime":1649278677869,"results":"37","hashOfConfig":"27"},{"size":796,"mtime":1648590194624,"results":"38","hashOfConfig":"27"},{"size":2480,"mtime":1649536427593,"results":"39","hashOfConfig":"27"},{"size":683,"mtime":1649530874344,"results":"40","hashOfConfig":"27"},{"size":2381,"mtime":1649597459804,"results":"41","hashOfConfig":"27"},{"size":780,"mtime":1648590229286,"results":"42","hashOfConfig":"27"},{"size":803,"mtime":1648644200790,"results":"43","hashOfConfig":"27"},{"size":1375,"mtime":1648417858685,"results":"44","hashOfConfig":"27"},{"size":1354,"mtime":1648417858681,"results":"45","hashOfConfig":"27"},{"size":4439,"mtime":1648506776041,"results":"46","hashOfConfig":"27"},{"size":1539,"mtime":1649521736087,"results":"47","hashOfConfig":"27"},{"size":1470,"mtime":1649521619185,"results":"48","hashOfConfig":"27"},{"size":3510,"mtime":1649535738641,"results":"49","hashOfConfig":"27"},{"size":766,"mtime":1649528740198,"results":"50","hashOfConfig":"27"},{"size":1288,"mtime":1649533609672,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"6r5e2l",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"54"},"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\index.js",[],["114","115"],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\App.js",["116"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\n\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n        <div className='App'>\n        <NavBar />\n        <AppRouter />\n        </div>\n          \n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\store\\UserStore.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\NavBar.js",["117"],"import React, {useContext} from 'react';\nimport {Context} from \"../index\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport {NavLink} from \"react-router-dom\";\nimport {ADMIN_ROUTE, LOGIN_ROUTE, GALLERY_ROUTE} from \"../utils/consts\";\nimport {Button} from \"react-bootstrap\";\nimport {observer} from \"mobx-react-lite\";\nimport Container from \"react-bootstrap/Container\";\nimport {useHistory} from 'react-router-dom'\nimport {getUserProfile} from \"../http/imageAPI\";\nimport Image from \"react-bootstrap/Image\";\nimport styles from './Header/Header.module.css' \nimport st from './iconfont/material-icons.css'\n\nconst NavBar = observer(() => {\n    const {user} = useContext(Context)\n    const history = useHistory()\n\n    const logOut = () => {\n        user.setUser({})\n        user.setIsAuth(false)\n        localStorage.removeItem('token');\n        localStorage.removeItem('userName');\n        localStorage.removeItem('userId')\n        localStorage.removeItem('userAvatar')\n    }\n\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            \n            <Container>\n            <nav className={styles.Header__logo}>PhotoApp</nav>\n            <div >\n            <input type=\"text\" placeholder=\"Поиск\" className={styles.Header__search}/>\n            <Button className='ml-2' variant={\"dark\"}>\n                Find\n            </Button>\n            </div>\n        \n            <div className={styles.Header__wrapper}>\n                <div className={styles.Header__item}>\n                    <span class=\"material-icons\">\n                        <NavLink to={GALLERY_ROUTE}>home</NavLink>\n                    </span>\n                </div> \n                <div className={styles.Header__item}>\n                    <span class=\"material-icons\" >\n                        send\n                    </span>    \n                </div> \n                <div className={styles.Header__item}>\n                    <span class=\"material-icons\">\n                        explore\n                    </span>\n                </div> \n                <div className={styles.Header__item}>\n                    <span class=\"material-icons\">\n                        favorite\n                    </span>    \n                </div> \n                <div className={styles.Header__item}></div> \n                \n                {user.isAuth ?\n                    <Nav className=\"ml-auto\">\n                        <Button\n                            variant={\"dark\"}\n                            onClick={() => history.push(ADMIN_ROUTE)}\n                        >\n                            Add\n                        </Button>\n                        <Button\n                            variant={\"dark\"}\n                            onClick={() => logOut()}\n                            className=\"ml-2\"\n                        >\n                            Logout\n                        </Button>\n                        \n                        <Image id=\"myAvatar\" className={styles.Header__userLogo} width='30' height='30'src={getUserProfile()}/>\n                            <nav id=\"myName\" className={styles.Header__userName}>{}</nav>\n                    </Nav>\n                    :\n                    <Nav className=\"ml-auto\" style={{color: 'white'}}>\n                        <Button variant={\"dark\"} onClick={() => history.push(LOGIN_ROUTE)}>Login</Button>\n                    </Nav>\n                }\n            </div>\n\n                \n            </Container>\n        </Navbar>\n\n    );\n});\n\nexport default NavBar;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\http\\userAPI.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\routes.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\http\\index.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\utils\\consts.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Auth.js",["118"],"import React, {useContext, useState} from 'react';\nimport {Container, Form} from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, GALLERY_ROUTE} from \"../utils/consts\";\nimport {login, registration, info} from \"../http/userAPI\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\n\nconst Auth = observer(() => {\n    const {user} = useContext(Context)\n    const location = useLocation()\n    const history = useHistory()\n    const isLogin = location.pathname === LOGIN_ROUTE\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [first_name, setFirstName] = useState('')\n    const [second_name, setSecondName] = useState('')\n    const [nick_name, setNickName] = useState('')\n    const [birthday, setBirthday] = useState('')\n\n    const click = async () => {\n        try {\n            let data;\n            let userdata;\n            if (isLogin) {\n                data = await login(email, password);\n                userdata = await info(email);\n            } else {\n                data = await registration(email, password, first_name, second_name, nick_name, birthday);\n                userdata = await info(email);\n            }\n            user.setUser(user)\n            user.setIsAuth(true)\n            if(userdata){\n                localStorage.setItem('userId', userdata.userinfo.id);\n                localStorage.setItem('userName', userdata.userinfo.nick_name);\n                localStorage.setItem('userAvatar',userdata.userinfo.img);\n            }\n            history.push(GALLERY_ROUTE)\n        } catch (e) {\n            alert(e.response.data.message);\n            console.error(e.response.data.message);\n        }\n\n    }\n\n    return (\n        <Container\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{height: window.innerHeight - 54}}\n        >\n            <Card style={{width: 600}} className=\"p-5\">\n                <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : \"Регистрация\"}</h2>\n                <Form className=\"d-flex flex-column\">\n                    {isLogin ?\n                    <div>\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш email...\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш пароль...\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                    </div> :\n                    <div>\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш email...\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш пароль...\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Имя\"\n                        value={first_name}\n                        onChange={e => setFirstName(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Фамилия\"\n                        value={second_name}\n                        onChange={e => setSecondName(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"НИК\"\n                        value={nick_name}\n                        onChange={e => setNickName(e.target.value)}\n                    />\n                    <Form.Control\n                         type=\"date\"\n                         className=\"mt-3\"\n                         placeholder=\"Дата рождения\"\n                         value={birthday}\n                         onChange={(e) => setBirthday(e.target.value)}\n                    />\n                    </div>}\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n                        {isLogin ?\n                            <div>\n                                Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n                            </div>\n                            :\n                            <div>\n                                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n                            </div>\n                        }\n                        <Button\n                            variant={\"outline-success\"}\n                            onClick={click}\n                        >\n                            {isLogin ? 'Войти' : 'Регистрация'}\n                        </Button>\n                    </Row>\n\n                </Form>\n            </Card>\n        </Container>\n    );\n});\n\nexport default Auth;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Admin.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\Pages.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\ImagePage.js",["119","120","121","122"],"import React, {useEffect, useState, useContext} from 'react';\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\nimport bigStar from '../assets/bigStar.png'\nimport {useParams} from 'react-router-dom'\nimport {fetchOneImage, getComments, dataParse} from \"../http/imageAPI\";\nimport {Context} from \"../index\";\nimport CommentList from '../components/CommentList';\nimport { observer } from 'mobx-react-lite';\n\nconst ImagePage  = observer(() => {\n    const [imagel, setImage] = useState({info: []})\n    const {id} = useParams()\n    const {image} = useContext(Context)\n\n    useEffect(() => {\n        fetchOneImage(id).then(data => setImage(data));\n        getComments(id).then(data => image.setComments(data));\n    }, [])\n\n    return (\n        <Container className=\"mt-3\">\n            <Row>\n                <Col md={7}>\n                    <Image width={600} height={600} src={process.env.REACT_APP_API_URL + imagel.img}/>\n                </Col>\n                <Col md={1}>\n                    <Row className=\"d-flex flex-column align-items-center\">\n                        <h2>LIKE</h2>\n                        <div\n                            className=\"d-flex align-items-center justify-content-center\"\n                            style={{background: `url(${bigStar}) no-repeat center center`, width:96, height: 96, backgroundSize: 'cover', fontSize:64}}\n                        >\n                            {imagel.like_count}\n                        </div>\n                    </Row>\n                </Col>\n                <Col md={4}>\n                    <Row className=\"d-flex flex-column align-items-center\">\n                        <h2>DISLIKE</h2>\n                        <div\n                            className=\"d-flex align-items-center justify-content-center\"\n                            style={{background: `url(${bigStar}) no-repeat center center`, width:96, height: 96, backgroundSize: 'cover', fontSize:64}}\n                        >\n                            {imagel.dislike_count}\n                        </div>\n                    </Row>\n                    <h1></h1>\n                    <Row><h5><div>{imagel.text}</div></h5></Row>\n                    \n                </Col>\n                \n            </Row>\n            <h7>{dataParse(imagel.createdAt)}</h7>\n            <Col md={2}>\n            <h2>COMMENTS</h2>       \n                    <CommentList/>\n            </Col>\n        </Container>\n    );\n})\n\nexport default ImagePage;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\ImageList.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\ImageItem.js",["123","124","125","126"],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\ThemeBar.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\FriendBar.js",["127"],"import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst FriendBar = observer(() => {\n    const {image} = useContext(Context)\n    return (      \n        <ListGroup>                             \n            {image.friends.map(friend =>\n                <ListGroup.Item\n                    style={{cursor: 'pointer'}}\n                    active={friend.id === image.selectedFriend.id}\n                    onClick={() => image.setSelectedFriend(friend)}\n                    key={friend.id}\n                >\n                    {friend.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default FriendBar;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\modals\\AddTheme.js",["128"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createTheme, createFriend} from \"../../http/imageAPI\";\n\nconst CreateTheme = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addTheme = () => {\n        createTheme({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить тему\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название темы\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addTheme}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateTheme;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\modals\\AddFriend.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\modals\\CreatePost.js",["129","130","131","132"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createImage, fetchThemes, fetchImages, fetchFriends} from \"../../http/imageAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateImage = observer(({show, onHide}) => {\n    const {image} = useContext(Context)\n    const [name, setName] = useState('')\n    const [text, setText] = useState('')//\n    const [location, setLocation] = useState('') //\n    const [file, setFile] = useState(null)\n\n    useEffect(() => {\n        fetchFriends().then(data => image.setFriends(data))\n        fetchThemes().then(data => image.setThemes(data))\n    }, [])\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addImage = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('img', file)\n        formData.append('location', location)\n        formData.append('text', text)\n        formData.append('themeId', image.selectedTheme.id)\n        formData.append('friendId', image.selectedFriend.id)\n        createImage(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить изоображение\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{image.selectedFriend.name || \"Выберите друга\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {image.friends.map(friend =>\n                                <Dropdown.Item\n                                    onClick={() => image.setSelectedFriend(friend)}\n                                    key={friend.id}\n                                >\n                                    {friend.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{image.selectedTheme.name || \"Выберите тему\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {image.themes.map(theme =>\n                                <Dropdown.Item\n                                    onClick={() => image.setSelectedTheme(theme)}\n                                    key={theme.id}\n                                >\n                                    {theme.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название изоображения\"\n                    />\n                    <Form.Control\n                        value={location}\n                        onChange={e => setLocation(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваше местоположение\"\n                    />\n                    <Form.Control\n                        value={text}\n                        onChange={e => setText(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите подпись к изоображению\"\n                    />\n\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addImage}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateImage;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Gallery.js",["133","134"],"import React, {useContext, useEffect} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport FriendBar from \"../components/FriendBar\";\nimport ThemeBar from \"../components/ThemeBar\";\nimport ImageList from \"../components/ImageList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchThemes, fetchImages, fetchFriends, getComments} from \"../http/imageAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Gallery = observer(() => {\n    const {image} = useContext(Context)\n    useEffect(() => {\n        fetchFriends().then(data => image.setFriends(data))\n        fetchThemes().then(data => image.setThemes(data))\n        \n        fetchImages(null, null, 1, 2).then(data => {\n            image.setImages(data.rows)\n            image.setTotalCount(data.count)\n        })\n    }, [])\n\n    useEffect(() => {\n        fetchImages(image.selectedFriend.id, image.selectedTheme.id, image.page, 2).then(data => {\n            image.setImages(data.rows)\n            image.setTotalCount(data.count)\n        })\n    }, [image.page, image.selectedFriend, image.selectedTheme,])\n\n\n\n    return (\n        <Container>\n            <Row className=\"mt-3\">\n                <Col md={2}>\n                    <FriendBar/>\n                </Col>\n                <Col md={2}>\n                    <ThemeBar/>\n                    <ImageList/>\n                    <Pages/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Gallery;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\store\\ImageStore.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\http\\imageAPI.js",["135","136","137","138","139"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\n\nexport const createFriend = async (friend) => {\n    const {data} = await $authHost.post('api/friend', friend)\n    return data\n}\n\nexport const fetchFriends = async () => {\n    const {data} = await $authHost.get('api/friend')\n    return data\n}\n\nexport const createTheme = async (theme) => {\n    const {data} = await $authHost.post('api/theme', theme)\n    return data\n}\n\nexport const fetchThemes = async () => {\n    const {data} = await $authHost.get('api/theme', )\n    return data\n}\n\nexport const createImage = async (image) => {\n    const {data} = await $authHost.post('api/image', image)\n    return data\n}\n\nexport const fetchImages = async (friendId, themeId, page, limit= 5) => {\n    const {data} = await $authHost.get('api/image', {params: {\n        friendId, themeId, page, limit\n        }})\n    return data\n}\n\nexport const fetchOneImage = async (id) => {\n    const {data} = await $authHost.get('api/image/' + id)\n    return data\n}\n\nexport const dis_like = async (imageId, userId, meaning) =>{ \n    const {data} = await $authHost.post('api/dis_like/', {imageId, userId, meaning})\n\n    const strL=\"likeBtn\"; const strD=\"dislikeBtn\";\n    var btn = document.getElementById(\"lbtn\"+imageId);\n    var btn2 = document.getElementById(\"dbtn\"+imageId);\n\n    if(meaning =='1'){\n        if(btn.classList.contains(strL)){\n            btn.classList.remove(strL);   \n        }else{\n             btn.classList.add(strL);\n             if(btn2.classList.contains(strD));\n             btn2.classList.remove(strD); \n        }\n    } else {\n        if(btn2.classList.contains(strD)){\n            btn2.classList.remove(strD);   \n        }else{\n             btn2.classList.add(strD);\n             if(btn.classList.contains(strL));\n             btn.classList.remove(strL); \n        }\n    }\n\n    document.getElementById(\"likeNum\"+imageId).innerHTML=data.like_count;\n    document.getElementById(\"dislikeNum\"+imageId).innerHTML=data.dislike_count;\n    return data\n}\n\nexport function getUserProfile(){\n    setTimeout(()=>{\n        if(document.getElementById(\"myName\")!=null && document.getElementById(\"myAvatar\")!=0){\n    document.getElementById(\"myName\").innerHTML=localStorage.getItem(\"userName\");\n    document.getElementById(\"myAvatar\").src = process.env.REACT_APP_API_URL+localStorage.getItem(\"userAvatar\");;\n    }}, 300)\n   \n }\n\n export function getImgNick(id, local){\n    setTimeout(()=>{\n        if(document.getElementById(\"nickName\"+id)!=null){\n            const res = localStorage.getItem(local+id).split(\" \");\n            const nick = res[0].slice(res[0].indexOf(\"'\")+1, res[0].lastIndexOf(\"'\"));\n            const img = res[1].slice(res[1].indexOf(\"'\")+1, res[1].lastIndexOf(\"'\"));\n        document.getElementById(\"nickName\"+id).innerHTML = nick;\n        document.getElementById(\"userImg\"+id).src = process.env.REACT_APP_API_URL +img;\n    }}, 10)\n }\n\n export const getComments = async (imageId) => {\n    const {data} = await $authHost.get('api/comment',{params: {imageId}})\n    return data\n}\n\nexport function dataParse(data){\n    let dt;\n    if(data!=null && data!=undefined){\n    dt = data.split(\"T\");\n    const date = dt[0]; \n    const time = dt[1]; \n    const ymd =date.split(\"-\");\n    const y = ymd[0];\n    const m = ymd[1];\n    const d = ymd[2];\n    const hm = time.split(\":\");\n    const h = (parseInt(hm[0])+3).toString();\n    const min = hm[1]; \n    return d+\"/\"+m+\"/\"+y+\" \"+h+\":\"+min;\n    }else\n        return \"wrong time format\"\n    \n}","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\CommentList.js",["140"],"import React, {useContext} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {Row} from \"react-bootstrap\";\r\nimport CommentItem from \"./CommentItem.js\";\r\nimport { getComments } from '../http/imageAPI';\r\nimport { userInfo } from '../http/userAPI';\r\n\r\nconst CommentList = observer(() => {\r\n    const {image} = useContext(Context);\r\n    \r\n    return (\r\n        <Row className=\"d-flex\">\r\n            {\r\n            image.comments.map(comment =>\r\n                <CommentItem key={comment.id} comment={comment} user={\r\n                    userInfo(comment.userId).then(data =>localStorage.setItem(\"comUserInfo\"+comment.id, data))}/>\r\n            )\r\n            }\r\n        </Row>\r\n    );\r\n});\r\n\r\nexport default CommentList;","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\CommentItem.js",["141","142"],"import React from 'react';\r\nimport {Card, Col} from \"react-bootstrap\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport styles from \"./Comment/Card.module.css\"\r\nimport { Image } from 'react-bootstrap';\r\n//import {dis_like} from \"../http/imageAPI\";\r\nimport { getImgNick, dataParse } from '../http/imageAPI';\r\n\r\nconst CommentItem = ({comment}) => {\r\n    const history = useHistory()\r\n    return (\r\n            <Card style={{width: 150, cursor: 'pointer'}} border={\"light\"}>\r\n            <div className={styles.Card}>\r\n            <div className={styles.Card_header}>\r\n            <Image id = {\"userImg\"+comment.id} className={styles.Card__userLogo}/>\r\n            <div clasName={styles.Card_userDate}>\r\n                    <div id = {\"nickName\"+comment.id}className={styles.Card__userName}>{getImgNick(comment.id, \"comUserInfo\")} </div>\r\n                    <div className={styles.Card__userPosition}>{dataParse(comment.createdAt)}</div>\r\n                </div>\r\n            <div className={styles.Card__burger}>\r\n                . . .\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.Card__communication}>\r\n                <div>{comment.text}</div>\r\n            </div>\r\n        </div>\r\n    </Card>\r\n        \r\n    );\r\n};\r\n\r\nexport default CommentItem;\r\n",{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":20,"column":8,"nodeType":"149","endLine":20,"endColumn":10,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":14,"column":8,"nodeType":"153","messageId":"154","endLine":14,"endColumn":10},{"ruleId":"151","severity":1,"message":"155","line":32,"column":17,"nodeType":"153","messageId":"154","endLine":32,"endColumn":21},{"ruleId":"151","severity":1,"message":"156","line":2,"column":9,"nodeType":"153","messageId":"154","endLine":2,"endColumn":15},{"ruleId":"151","severity":1,"message":"157","line":2,"column":17,"nodeType":"153","messageId":"154","endLine":2,"endColumn":21},{"ruleId":"147","severity":1,"message":"158","line":18,"column":8,"nodeType":"149","endLine":18,"endColumn":10,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":47,"column":21,"nodeType":"162","endLine":47,"endColumn":25},{"ruleId":"151","severity":1,"message":"163","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":12},{"ruleId":"151","severity":1,"message":"164","line":12,"column":11,"nodeType":"153","messageId":"154","endLine":12,"endColumn":18},{"ruleId":"165","severity":1,"message":"166","line":32,"column":17,"nodeType":"162","endLine":32,"endColumn":43},{"ruleId":"165","severity":1,"message":"166","line":38,"column":17,"nodeType":"162","endLine":38,"endColumn":43},{"ruleId":"151","severity":1,"message":"167","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":11},{"ruleId":"151","severity":1,"message":"168","line":4,"column":22,"nodeType":"153","messageId":"154","endLine":4,"endColumn":34},{"ruleId":"151","severity":1,"message":"169","line":3,"column":33,"nodeType":"153","messageId":"154","endLine":3,"endColumn":36},{"ruleId":"151","severity":1,"message":"167","line":3,"column":38,"nodeType":"153","messageId":"154","endLine":3,"endColumn":41},{"ruleId":"151","severity":1,"message":"170","line":5,"column":35,"nodeType":"153","messageId":"154","endLine":5,"endColumn":46},{"ruleId":"147","severity":1,"message":"171","line":18,"column":8,"nodeType":"149","endLine":18,"endColumn":10,"suggestions":"172"},{"ruleId":"147","severity":1,"message":"171","line":23,"column":8,"nodeType":"149","endLine":23,"endColumn":10,"suggestions":"173"},{"ruleId":"147","severity":1,"message":"171","line":30,"column":8,"nodeType":"149","endLine":30,"endColumn":64,"suggestions":"174"},{"ruleId":"151","severity":1,"message":"175","line":1,"column":20,"nodeType":"153","messageId":"154","endLine":1,"endColumn":25},{"ruleId":"151","severity":1,"message":"176","line":2,"column":8,"nodeType":"153","messageId":"154","endLine":2,"endColumn":18},{"ruleId":"177","severity":1,"message":"178","line":49,"column":16,"nodeType":"179","messageId":"180","endLine":49,"endColumn":18},{"ruleId":"177","severity":1,"message":"181","line":74,"column":90,"nodeType":"179","messageId":"180","endLine":74,"endColumn":92},{"ruleId":"177","severity":1,"message":"181","line":99,"column":26,"nodeType":"179","messageId":"180","endLine":99,"endColumn":28},{"ruleId":"151","severity":1,"message":"182","line":6,"column":10,"nodeType":"153","messageId":"154","endLine":6,"endColumn":21},{"ruleId":"151","severity":1,"message":"167","line":2,"column":15,"nodeType":"153","messageId":"154","endLine":2,"endColumn":18},{"ruleId":"151","severity":1,"message":"164","line":10,"column":11,"nodeType":"153","messageId":"154","endLine":10,"endColumn":18},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["185"],"no-unused-vars","'st' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'Button' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'image'. Either include them or remove the dependency array.",["186"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'star' is defined but never used.","'history' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Col' is defined but never used.","'createFriend' is defined but never used.","'Row' is defined but never used.","'fetchImages' is defined but never used.","React Hook useEffect has a missing dependency: 'image'. Either include it or remove the dependency array.",["187"],["188"],["189"],"'$host' is defined but never used.","'jwt_decode' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'getComments' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"194","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [user]",{"range":"199","text":"200"},"Update the dependencies array to be: [id, image]",{"range":"201","text":"202"},"Update the dependencies array to be: [image]",{"range":"203","text":"204"},{"range":"205","text":"204"},"Update the dependencies array to be: [image, image.page, image.selectedFriend, image.selectedTheme]",{"range":"206","text":"207"},[642,644],"[user]",[733,735],"[id, image]",[758,760],"[image]",[958,960],[1185,1241],"[image, image.page, image.selectedFriend, image.selectedTheme]"]