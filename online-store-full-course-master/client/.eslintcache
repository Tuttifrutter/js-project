[{"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\index.js":"1","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\App.js":"2","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\store\\UserStore.js":"3","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\AppRouter.js":"4","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\NavBar.js":"5","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\http\\userAPI.js":"6","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\routes.js":"7","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\http\\index.js":"8","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\utils\\consts.js":"9","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Auth.js":"10","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Admin.js":"11","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\Pages.js":"12","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\ImagePage.js":"13","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\ImageList.js":"14","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\ImageItem.js":"15","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\ThemeBar.js":"16","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\FriendBar.js":"17","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\modals\\AddTheme.js":"18","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\modals\\AddFriend.js":"19","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\modals\\CreatePost.js":"20","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Gallery.js":"21","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\store\\ImageStore.js":"22","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\http\\imageAPI.js":"23","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\CommentList.js":"24","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\CommentItem.js":"25","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\CommentAddForm.js":"26","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\UserPage.js":"27","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\UserInfoItem.js":"28","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Favourite.js":"29"},{"size":457,"mtime":1649520875300,"results":"30","hashOfConfig":"31"},{"size":909,"mtime":1648588061716,"results":"32","hashOfConfig":"31"},{"size":401,"mtime":1611985807000,"results":"33","hashOfConfig":"31"},{"size":801,"mtime":1648406976614,"results":"34","hashOfConfig":"31"},{"size":3898,"mtime":1650132808815,"results":"35","hashOfConfig":"31"},{"size":2184,"mtime":1650207584131,"results":"36","hashOfConfig":"31"},{"size":936,"mtime":1650132726054,"results":"37","hashOfConfig":"31"},{"size":407,"mtime":1611985807000,"results":"38","hashOfConfig":"31"},{"size":311,"mtime":1650132645859,"results":"39","hashOfConfig":"31"},{"size":6012,"mtime":1650205918851,"results":"40","hashOfConfig":"31"},{"size":1556,"mtime":1649278677869,"results":"41","hashOfConfig":"31"},{"size":796,"mtime":1648590194624,"results":"42","hashOfConfig":"31"},{"size":2647,"mtime":1649623639821,"results":"43","hashOfConfig":"31"},{"size":683,"mtime":1649530874344,"results":"44","hashOfConfig":"31"},{"size":2527,"mtime":1650122399887,"results":"45","hashOfConfig":"31"},{"size":780,"mtime":1648590229286,"results":"46","hashOfConfig":"31"},{"size":803,"mtime":1648644200790,"results":"47","hashOfConfig":"31"},{"size":1375,"mtime":1648417858685,"results":"48","hashOfConfig":"31"},{"size":1354,"mtime":1648417858681,"results":"49","hashOfConfig":"31"},{"size":4439,"mtime":1648506776041,"results":"50","hashOfConfig":"31"},{"size":1550,"mtime":1650123316289,"results":"51","hashOfConfig":"31"},{"size":1727,"mtime":1650133748295,"results":"52","hashOfConfig":"31"},{"size":4461,"mtime":1650137529335,"results":"53","hashOfConfig":"31"},{"size":766,"mtime":1649528740198,"results":"54","hashOfConfig":"31"},{"size":1470,"mtime":1650122003252,"results":"55","hashOfConfig":"31"},{"size":1750,"mtime":1650122210042,"results":"56","hashOfConfig":"31"},{"size":1666,"mtime":1650129988890,"results":"57","hashOfConfig":"31"},{"size":1546,"mtime":1650207252758,"results":"58","hashOfConfig":"31"},{"size":1225,"mtime":1650137965194,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"6r5e2l",{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"62"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"62"},"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\index.js",[],["133","134"],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\App.js",["135"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\n\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n        <div className='App'>\n        <NavBar />\n        <AppRouter />\n        </div>\n          \n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\store\\UserStore.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\NavBar.js",["136"],"import React, {useContext} from 'react';\nimport {Context} from \"../index\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport {NavLink} from \"react-router-dom\";\nimport {ADMIN_ROUTE, LOGIN_ROUTE, GALLERY_ROUTE, USERPAGE_ROUTE, FAVOURITE_ROUTE} from \"../utils/consts\";\nimport {Button} from \"react-bootstrap\";\nimport {observer} from \"mobx-react-lite\";\nimport Container from \"react-bootstrap/Container\";\nimport {useHistory} from 'react-router-dom'\nimport {getUserProfile} from \"../http/imageAPI\";\nimport Image from \"react-bootstrap/Image\";\nimport styles from './Header/Header.module.css' \nimport st from './iconfont/material-icons.css'\n\nconst NavBar = observer(() => {\n    const {user} = useContext(Context)\n    const history = useHistory()\n    const userId = localStorage.getItem('userId');\n    const logOut = () => {\n        user.setUser({})\n        user.setIsAuth(false)\n        localStorage.removeItem('token');\n        localStorage.removeItem('userName');\n        localStorage.removeItem('userId');\n        localStorage.removeItem('userAvatar');\n        localStorage.removeItem(\"choosenUserId\");\n    }\n\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            \n            <Container>\n            <nav className={styles.Header__logo}>PhotoApp</nav>\n            <div >\n            <input type=\"text\" placeholder=\"Поиск\" className={styles.Header__search}/>\n            <Button className='ml-2' variant={\"dark\"}>\n                Find\n            </Button>\n            </div>\n        \n            <div className={styles.Header__wrapper}>\n                <div className={styles.Header__item}>\n                    <span class=\"material-icons\" onClick={localStorage.removeItem(\"choosenUserId\")}>\n                        <NavLink to={GALLERY_ROUTE}>home</NavLink>\n                    </span>\n                </div> \n                <div className={styles.Header__item}>\n                    <span class=\"material-icons\" >\n                        send\n                    </span>    \n                </div> \n                <div className={styles.Header__item}>\n                    <span class=\"material-icons\">\n                        explore\n                    </span>\n                </div> \n                <div className={styles.Header__item}>\n                    <span class=\"material-icons\">\n                    <NavLink to={FAVOURITE_ROUTE}>favorite</NavLink> \n                    </span>    \n                </div> \n                <div className={styles.Header__item}></div> \n                \n                {user.isAuth ?\n                    <Nav className=\"ml-auto\">\n                        <Button\n                            variant={\"dark\"}\n                            onClick={() => history.push(ADMIN_ROUTE)}\n                        >\n                            Add\n                        </Button>\n                        <Button\n                            variant={\"dark\"}\n                            onClick={() => logOut()}\n                            className=\"ml-2\"\n                        >\n                            Logout\n                        </Button>\n                        \n                        <Image id=\"myAvatar\" className={styles.Header__userLogo} width='30' height='30'src={getUserProfile(\"myName\",\"myAvatar\")} onClick={(event) => {localStorage.setItem(\"choosenUserId\", userId);  history.push(USERPAGE_ROUTE + '/' + userId)}}/>\n                            <nav id=\"myName\" className={styles.Header__userName}>{}</nav>\n                    </Nav>\n                    :\n                    <Nav className=\"ml-auto\" style={{color: 'white'}}>\n                        <Button variant={\"dark\"} onClick={() => history.push(LOGIN_ROUTE)}>Login</Button>\n                    </Nav>\n                }\n            </div>\n\n                \n            </Container>\n        </Navbar>\n\n    );\n});\n\nexport default NavBar;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\http\\userAPI.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\routes.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\http\\index.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\utils\\consts.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Auth.js",["137","138"],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Admin.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\Pages.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\ImagePage.js",["139","140","141","142","143"],"import React, {useEffect, useState, useContext} from 'react';\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\nimport bigStar from '../assets/bigStar.png'\nimport {useParams} from 'react-router-dom'\nimport {fetchOneImage, getComments, dataParse} from \"../http/imageAPI\";\nimport {Context} from \"../index\";\nimport CommentList from '../components/CommentList';\nimport CommentAddForm from '../components/CommentAddForm';\nimport { observer } from 'mobx-react-lite';\n\nconst ImagePage  = observer(() => {\n    const [imagel, setImage] = useState({info: []})\n    const {id} = useParams()\n    const {image} = useContext(Context)\n\n    useEffect(() => {\n        fetchOneImage(id).then(data => setImage(data));\n        getComments(id).then(data => image.setComments(data));\n        localStorage.setItem(\"ChoosenImgId\",id);\n    }, [])\n\n    return (\n        <Container className=\"mt-3\">\n            <Row>\n                <Col md={7}>\n                    <Image width={600} height={600} src={process.env.REACT_APP_API_URL + imagel.img}/>\n                </Col>\n                <Col md={1}>\n                    <Row className=\"d-flex flex-column align-items-center\">\n                        <h2>LIKE</h2>\n                        <div\n                            className=\"d-flex align-items-center justify-content-center\"\n                            style={{background: `url(${bigStar}) no-repeat center center`, width:96, height: 96, backgroundSize: 'cover', fontSize:64}}\n                        >\n                            {imagel.like_count}\n                        </div>\n                    </Row>\n                </Col>\n                <Col md={4}>\n                    <Row className=\"d-flex flex-column align-items-center\">\n                        <h2>DISLIKE</h2>\n                        <div\n                            className=\"d-flex align-items-center justify-content-center\"\n                            style={{background: `url(${bigStar}) no-repeat center center`, width:96, height: 96, backgroundSize: 'cover', fontSize:64}}\n                        >\n                            {imagel.dislike_count}\n                        </div>\n                    </Row>\n                    <h1></h1>\n                    <Row><h5><div>{imagel.text}</div></h5></Row>\n                    \n                </Col>\n                \n            </Row>\n            <h7>{dataParse(imagel.createdAt)}</h7>\n            <Col md={2}>\n            <h2>COMMENTS</h2>   \n                <CommentAddForm/>\n                <h1></h1>   \n                    <CommentList/>\n            </Col>\n        </Container>\n    );\n})\n\nexport default ImagePage;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\ImageList.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\ImageItem.js",["144","145","146"],"import React from 'react';\nimport {Card, Col} from \"react-bootstrap\";\nimport Image from \"react-bootstrap/Image\";\nimport star from '../assets/star.png'\nimport styles from \"./Main/Card.module.css\"\nimport {useHistory} from \"react-router-dom\"\nimport {IMAGE_ROUTE, USERPAGE_ROUTE} from \"../utils/consts\";\nimport {dis_like} from \"../http/imageAPI\";\nimport { getImgNick } from '../http/imageAPI';\n\nconst ImageItem = ({image, user}) => {\n    const history = useHistory()\n    return (\n            <Card style={{width: 150, cursor: 'pointer'}} border={\"light\"}>\n            <div className={styles.Card}>\n            <div className={styles.Card__header} >\n                <Image id = {\"userImg\"+image.id} className={styles.Card__userLogo} onClick={(event) => {localStorage.setItem(\"choosenUserId\", image.userId);  history.push(USERPAGE_ROUTE + '/' + image.userId)}} />\n                <div clasName={styles.Card_userDate}>\n                    <div id = {\"nickName\"+image.id}className={styles.Card__userName}>{getImgNick(image.id, \"imgUserInfo\")} </div>\n                    <div className={styles.Card__userPosition}>{image.location}</div>\n                </div>\n                <div className={styles.Card__burger}>\n                . . .\n                </div>\n            </div>\n            <Col md={-3} onClick={(event) => {history.push(IMAGE_ROUTE + '/' + image.id)}}>\n            <div className={styles.Card__content}><Image width={614} height={614} src={process.env.REACT_APP_API_URL + image.img}/></div>\n            </Col>\n            <div className={styles.Card__communication}>\n        \n                <span id = {\"lbtn\"+image.id}  onClick={ like =>{dis_like(image.id, localStorage.getItem('userId'), '1'); }}>\n                <a class=\"material-icons\">thumb_up </a>                  \n                                                         \n                </span>\n                  \n                <span id = {\"likeNum\"+image.id}>{image.like_count}</span>\n                <span id = {\"dbtn\"+image.id} onClick={dislike => {dis_like(image.id, localStorage.getItem('userId'), '0'); }}>\n                <a class=\"material-icons\">thumb_down </a>\n                </span>\n                <span id={\"dislikeNum\"+image.id}>{image.dislike_count}</span>    \n                  \n                <span class=\"material-icons\">\n                    send\n                </span>\n                <span>0</span> \n                <div>{image.text}</div>\n            </div>\n        </div>\n    </Card>\n        \n    );\n};\n\nexport default ImageItem;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\ThemeBar.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\FriendBar.js",["147"],"import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst FriendBar = observer(() => {\n    const {image} = useContext(Context)\n    return (      \n        <ListGroup>                             \n            {image.friends.map(friend =>\n                <ListGroup.Item\n                    style={{cursor: 'pointer'}}\n                    active={friend.id === image.selectedFriend.id}\n                    onClick={() => image.setSelectedFriend(friend)}\n                    key={friend.id}\n                >\n                    {friend.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default FriendBar;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\modals\\AddTheme.js",["148"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createTheme, createFriend} from \"../../http/imageAPI\";\n\nconst CreateTheme = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addTheme = () => {\n        createTheme({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить тему\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название темы\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addTheme}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateTheme;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\modals\\AddFriend.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\modals\\CreatePost.js",["149","150","151","152"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createImage, fetchThemes, fetchImages, fetchFriends} from \"../../http/imageAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateImage = observer(({show, onHide}) => {\n    const {image} = useContext(Context)\n    const [name, setName] = useState('')\n    const [text, setText] = useState('')//\n    const [location, setLocation] = useState('') //\n    const [file, setFile] = useState(null)\n\n    useEffect(() => {\n        fetchFriends().then(data => image.setFriends(data))\n        fetchThemes().then(data => image.setThemes(data))\n    }, [])\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addImage = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('img', file)\n        formData.append('location', location)\n        formData.append('text', text)\n        formData.append('themeId', image.selectedTheme.id)\n        formData.append('friendId', image.selectedFriend.id)\n        createImage(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить изоображение\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{image.selectedFriend.name || \"Выберите друга\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {image.friends.map(friend =>\n                                <Dropdown.Item\n                                    onClick={() => image.setSelectedFriend(friend)}\n                                    key={friend.id}\n                                >\n                                    {friend.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{image.selectedTheme.name || \"Выберите тему\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {image.themes.map(theme =>\n                                <Dropdown.Item\n                                    onClick={() => image.setSelectedTheme(theme)}\n                                    key={theme.id}\n                                >\n                                    {theme.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название изоображения\"\n                    />\n                    <Form.Control\n                        value={location}\n                        onChange={e => setLocation(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваше местоположение\"\n                    />\n                    <Form.Control\n                        value={text}\n                        onChange={e => setText(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите подпись к изоображению\"\n                    />\n\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addImage}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateImage;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Gallery.js",["153","154"],"import React, {useContext, useEffect} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport FriendBar from \"../components/FriendBar\";\nimport ThemeBar from \"../components/ThemeBar\";\nimport ImageList from \"../components/ImageList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchThemes, fetchImages, fetchFriends} from \"../http/imageAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Gallery = observer(() => {\n    const {image} = useContext(Context)\n    useEffect(() => {\n        fetchFriends().then(data => image.setFriends(data))\n        fetchThemes().then(data => image.setThemes(data))\n        fetchImages(null, null, 1, null, 2).then(data => {\n            image.setImages(data.rows)\n            image.setTotalCount(data.count)\n        })\n    }, [])\n\n    useEffect(() => {\n        fetchImages(image.selectedFriend.id, image.selectedTheme.id, image.page,null, 2).then(data => {\n            image.setImages(data.rows)\n            image.setTotalCount(data.count)\n        })\n    }, [image.page, image.selectedFriend, image.selectedTheme,])\n\n\n\n    return (\n        <Container>\n            <Row className=\"mt-3\">\n                <Col md={2}>\n                    <FriendBar/>\n                </Col>\n                <Col md={2}>\n                    <ThemeBar/>\n                    <ImageList/>\n                    <Pages/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Gallery;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\store\\ImageStore.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\http\\imageAPI.js",["155","156","157","158","159","160","161","162"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\n\nexport const createFriend = async (friend) => {\n    const {data} = await $authHost.post('api/friend', friend)\n    return data\n}\n\nexport const fetchFriends = async () => {\n    const {data} = await $authHost.get('api/friend')\n    return data\n}\n\nexport const createTheme = async (theme) => {\n    const {data} = await $authHost.post('api/theme', theme)\n    return data\n}\n\nexport const fetchThemes = async () => {\n    const {data} = await $authHost.get('api/theme', )\n    return data\n}\n\nexport const createImage = async (image) => {\n    const {data} = await $authHost.post('api/image', image)\n    return data\n}\n\nexport const fetchImages = async (friendId, themeId, page, userId=null, limit= 5) => {\n    const {data} = await $authHost.get('api/image', {params: {\n        friendId, themeId, page, limit, userId\n        }})\n    return data\n}\n\nexport const fetchOneImage = async (id) => {\n    const {data} = await $authHost.get('api/image/' + id)\n    return data\n}\n\nexport const dis_like = async (imageId, userId, meaning) =>{ \n    const {data} = await $authHost.post('api/dis_like/', {imageId, userId, meaning})\n\n    const strL=\"likeBtn\"; const strD=\"dislikeBtn\";\n    var btn = document.getElementById(\"lbtn\"+imageId);\n    var btn2 = document.getElementById(\"dbtn\"+imageId);\n\n    if(meaning =='1'){\n        if(btn.classList.contains(strL)){\n            btn.classList.remove(strL);   \n        }else{\n             btn.classList.add(strL);\n             if(btn2.classList.contains(strD));\n             btn2.classList.remove(strD); \n        }\n    } else {\n        if(btn2.classList.contains(strD)){\n            btn2.classList.remove(strD);   \n        }else{\n             btn2.classList.add(strD);\n             if(btn.classList.contains(strL));\n             btn.classList.remove(strL); \n        }\n    }\n\n    document.getElementById(\"likeNum\"+imageId).innerHTML=data.like_count;\n    document.getElementById(\"dislikeNum\"+imageId).innerHTML=data.dislike_count;\n    return data\n}\n\nexport const getLikeList = async (userId) => {\n    const {data} = await $authHost.get('api/dis_like/', {params:{userId}})\n    console.log(data);\n    return data\n}\n\nexport function getUserProfile(nameId, avatarId){\n    setTimeout(()=>{\n        if(document.getElementById(nameId)!=null && document.getElementById(avatarId)!=0){\n    document.getElementById(nameId).innerHTML=localStorage.getItem(\"userName\");\n    document.getElementById(avatarId).src = process.env.REACT_APP_API_URL+localStorage.getItem(\"userAvatar\");;\n    }}, 300)\n   \n }\n\n export function getImgNick(id, local){\n    setTimeout(()=>{\n        if(document.getElementById(\"nickName\"+id)!=null && localStorage.getItem(local+id)!=null){\n            const res = localStorage.getItem(local+id).split(\" \");\n            const nick = res[0].slice(res[0].indexOf(\"'\")+1, res[0].lastIndexOf(\"'\"));\n            const img = res[1].slice(res[1].indexOf(\"'\")+1, res[1].lastIndexOf(\"'\"));\n        document.getElementById(\"nickName\"+id).innerHTML = nick;\n        document.getElementById(\"userImg\"+id).src = process.env.REACT_APP_API_URL +img;\n    }}, 10)\n }\n\n export const getComments = async (imageId) => {\n    const {data} = await $authHost.get('api/comment',{params: {imageId}})\n    return data\n}\n\nexport function dataParse(data){\n    let dt;\n    if(data!=null && data!=undefined){\n    dt = data.split(\"T\");\n    const date = dt[0]; \n    const time = dt[1]; \n    const ymd =date.split(\"-\");\n    const y = ymd[0];\n    const m = ymd[1];\n    const d = ymd[2];\n    const hm = time.split(\":\");\n    const h = (parseInt(hm[0])+3).toString();\n    const min = hm[1]; \n    return d+\"/\"+m+\"/\"+y+\" \"+h+\":\"+min;\n    }else\n        return \"wrong time format\"\n    \n}\n\nexport const sendComment = async (imageId, userId) => {\n    var t = document.getElementById(\"input\");\n    let data;\n    if(t.value!=\"\" && t.value!=null && t.value!=undefined ){\n        var text = t.value;\n        if(text.length>=500){\n            alert(\"Комментарий слишком большой, уложитесь в 500 символов, друг\");\n        }else{\n            data = await $authHost.post('api/comment',{imageId, userId, text}).then(result => alert(\"Комментарий: '\"+result.data.text+\"' добавлен\"));\n            t.value = \"\";\n            window.location.reload();\n        }\n    }else\n        alert(\"Комментарий пустой, как моя жизнь(((\");\n}","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\CommentList.js",["163"],"import React, {useContext} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {Row} from \"react-bootstrap\";\r\nimport CommentItem from \"./CommentItem.js\";\r\nimport { getComments } from '../http/imageAPI';\r\nimport { userInfo } from '../http/userAPI';\r\n\r\nconst CommentList = observer(() => {\r\n    const {image} = useContext(Context);\r\n    \r\n    return (\r\n        <Row className=\"d-flex\">\r\n            {\r\n            image.comments.map(comment =>\r\n                <CommentItem key={comment.id} comment={comment} user={\r\n                    userInfo(comment.userId).then(data =>localStorage.setItem(\"comUserInfo\"+comment.id, data))}/>\r\n            )\r\n            }\r\n        </Row>\r\n    );\r\n});\r\n\r\nexport default CommentList;","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\CommentItem.js",["164"],"import React from 'react';\r\nimport {Card, Col} from \"react-bootstrap\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport styles from \"./Comment/Card.module.css\"\r\nimport { Image } from 'react-bootstrap';\r\nimport { USERPAGE_ROUTE } from '../utils/consts';\r\n//import {dis_like} from \"../http/imageAPI\";\r\nimport { getImgNick, dataParse } from '../http/imageAPI';\r\n\r\nconst CommentItem = ({comment}) => {\r\n    const history = useHistory()\r\n    return (\r\n            <Card style={{width: 150, cursor: 'pointer'}} border={\"light\"}>\r\n            <div className={styles.Card}>\r\n            <div className={styles.Card_header}>\r\n            <Image id = {\"userImg\"+comment.id} className={styles.Card__userLogo} onClick={(event) => {localStorage.setItem(\"choosenUserId\", comment.userId);  history.push(USERPAGE_ROUTE + '/' + comment.userId)}}/>\r\n            <div clasName={styles.Card_userDate}>\r\n                    <div id = {\"nickName\"+comment.id}className={styles.Card__userName}>{getImgNick(comment.id, \"comUserInfo\")} </div>\r\n                    <div className={styles.Card__userPosition}>{dataParse(comment.createdAt)}</div>\r\n                </div>\r\n            <div className={styles.Card__burger}>\r\n                . . .\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.Card__communication}>\r\n                <div>{comment.text}</div>\r\n            </div>\r\n        </div>\r\n    </Card>\r\n        \r\n    );\r\n};\r\n\r\nexport default CommentItem;\r\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\CommentAddForm.js",["165"],"import React from 'react';\r\nimport {Button, Card, Col} from \"react-bootstrap\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport styles from \"./Comment/Card.module.css\"\r\nimport { Image } from 'react-bootstrap';\r\nimport {getUserProfile, sendComment} from '../http/imageAPI';\r\nimport { USERPAGE_ROUTE } from '../utils/consts';\r\nconst CommentAddForm = () => {\r\n    const history = useHistory()\r\n    const userId = localStorage.getItem(\"userId\");\r\n    return (\r\n            <Card style={{width: 150, cursor: 'pointer'}} border={\"light\"}>\r\n            <div className={styles.Card}>\r\n            <div className={styles.Card_header}>\r\n            <Image id = {\"addComUserImg\"} className={styles.Card__userLogo} onClick={(event) => {localStorage.setItem(\"choosenUserId\", userId);  history.push(USERPAGE_ROUTE + '/' + userId)}}/>\r\n            <div clasName={styles.Card_userDate}>\r\n                    <div id = {\"addComUserNick\"}className={styles.Card__userName}>{} </div>\r\n                    <div className={styles.Card__userPosition}>{getUserProfile(\"addComUserNick\",\"addComUserImg\")}</div>\r\n                </div>\r\n            <div className={styles.Card__burger}>\r\n                . . .\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.Card__communication}>\r\n                <div><textarea id =\"input\" type=\"text\" placeholder=\"Введите свой комментарий\" className={styles.Сomment__add}/></div>\r\n            </div>\r\n            <div ><Button className={styles.Comment__btn} onClick={()=>sendComment(localStorage.getItem(\"ChoosenImgId\"), localStorage.getItem(\"userId\"))}>SEND</Button></div>\r\n\r\n        </div>\r\n    </Card>\r\n            \r\n            \r\n    );\r\n};\r\n\r\nexport default CommentAddForm;\r\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\UserPage.js",["166","167"],"import React, {useContext, useEffect} from 'react';\r\nimport {Container} from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport UserInfoItem from '../components/UserInfoItem';\r\nimport ThemeBar from \"../components/ThemeBar\";\r\nimport ImageList from \"../components/ImageList\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {fetchThemes, fetchImages} from \"../http/imageAPI\";\r\nimport Pages from \"../components/Pages\";\r\nimport { getUserInfo } from '../http/userAPI';\r\n\r\nconst UserPage = observer(() => {\r\n    const {image} = useContext(Context)\r\n    const userId = localStorage.getItem(\"choosenUserId\");\r\n    useEffect(() => {\r\n        fetchThemes().then(data => image.setThemes(data))\r\n        getUserInfo(userId).then(data => image.setUserInfo(data))\r\n        fetchImages(null, null, 1, userId, 2).then(data => {\r\n            image.setImages(data.rows)\r\n            image.setTotalCount(data.count)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchImages(null, image.selectedTheme.id, image.page,userId, 2).then(data => {\r\n            image.setImages(data.rows)\r\n            image.setTotalCount(data.count)\r\n        })\r\n    }, [image.page, image.selectedFriend, image.selectedTheme,])\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-3\">\r\n                <Col md={2}>\r\n                    <UserInfoItem user ={image.getUserInfo}/>\r\n                    <ThemeBar/>\r\n                    <ImageList/>\r\n                    <Pages/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default UserPage;\r\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\UserInfoItem.js",["168","169","170","171"],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Favourite.js",["172","173","174"],"import React, {useContext, useEffect} from 'react';\r\nimport {Container} from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ThemeBar from \"../components/ThemeBar\";\r\nimport ImageList from \"../components/ImageList\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {fetchThemes, getLikeList, fetchOneImage} from \"../http/imageAPI\";\r\n\r\nconst Favourite = observer(() => {\r\n    const {image} = useContext(Context)\r\n    let userId = localStorage.getItem(\"userId\");\r\n    useEffect(() => {\r\n        fetchThemes().then(data => image.setThemes(data))\r\n        let imgList=[];\r\n        image.clearImages();\r\n        getLikeList(userId).then(data =>{\r\n            for(let i=0; i<data.length; i++){\r\n                fetchOneImage(data[i]).then(result => {image.addImage(result)})\r\n            }\r\n            \r\n        })\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-3\">\r\n                <Col md={2}>\r\n                    <h2>ПОНРАВИВШИЕСЯ:</h2>\r\n                    <ImageList/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Favourite;\r\n",{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":20,"column":8,"nodeType":"181","endLine":20,"endColumn":10,"suggestions":"182"},{"ruleId":"183","severity":1,"message":"184","line":14,"column":8,"nodeType":"185","messageId":"186","endLine":14,"endColumn":10},{"ruleId":"183","severity":1,"message":"187","line":36,"column":17,"nodeType":"185","messageId":"186","endLine":36,"endColumn":21},{"ruleId":"183","severity":1,"message":"188","line":37,"column":17,"nodeType":"185","messageId":"186","endLine":37,"endColumn":25},{"ruleId":"183","severity":1,"message":"189","line":2,"column":9,"nodeType":"185","messageId":"186","endLine":2,"endColumn":15},{"ruleId":"183","severity":1,"message":"190","line":2,"column":17,"nodeType":"185","messageId":"186","endLine":2,"endColumn":21},{"ruleId":"179","severity":1,"message":"191","line":20,"column":8,"nodeType":"181","endLine":20,"endColumn":10,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":49,"column":21,"nodeType":"195","endLine":49,"endColumn":25},{"ruleId":"193","severity":1,"message":"194","line":59,"column":17,"nodeType":"195","endLine":59,"endColumn":21},{"ruleId":"183","severity":1,"message":"196","line":4,"column":8,"nodeType":"185","messageId":"186","endLine":4,"endColumn":12},{"ruleId":"197","severity":1,"message":"198","line":32,"column":17,"nodeType":"195","endLine":32,"endColumn":43},{"ruleId":"197","severity":1,"message":"198","line":38,"column":17,"nodeType":"195","endLine":38,"endColumn":43},{"ruleId":"183","severity":1,"message":"199","line":4,"column":8,"nodeType":"185","messageId":"186","endLine":4,"endColumn":11},{"ruleId":"183","severity":1,"message":"200","line":4,"column":22,"nodeType":"185","messageId":"186","endLine":4,"endColumn":34},{"ruleId":"183","severity":1,"message":"201","line":3,"column":33,"nodeType":"185","messageId":"186","endLine":3,"endColumn":36},{"ruleId":"183","severity":1,"message":"199","line":3,"column":38,"nodeType":"185","messageId":"186","endLine":3,"endColumn":41},{"ruleId":"183","severity":1,"message":"202","line":5,"column":35,"nodeType":"185","messageId":"186","endLine":5,"endColumn":46},{"ruleId":"179","severity":1,"message":"203","line":18,"column":8,"nodeType":"181","endLine":18,"endColumn":10,"suggestions":"204"},{"ruleId":"179","severity":1,"message":"203","line":22,"column":8,"nodeType":"181","endLine":22,"endColumn":10,"suggestions":"205"},{"ruleId":"179","severity":1,"message":"203","line":29,"column":8,"nodeType":"181","endLine":29,"endColumn":64,"suggestions":"206"},{"ruleId":"183","severity":1,"message":"207","line":1,"column":20,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"208","line":2,"column":8,"nodeType":"185","messageId":"186","endLine":2,"endColumn":18},{"ruleId":"209","severity":1,"message":"210","line":49,"column":16,"nodeType":"211","messageId":"212","endLine":49,"endColumn":18},{"ruleId":"209","severity":1,"message":"213","line":80,"column":86,"nodeType":"211","messageId":"212","endLine":80,"endColumn":88},{"ruleId":"209","severity":1,"message":"213","line":105,"column":26,"nodeType":"211","messageId":"212","endLine":105,"endColumn":28},{"ruleId":"209","severity":1,"message":"213","line":125,"column":15,"nodeType":"211","messageId":"212","endLine":125,"endColumn":17},{"ruleId":"209","severity":1,"message":"213","line":125,"column":47,"nodeType":"211","messageId":"212","endLine":125,"endColumn":49},{"ruleId":"183","severity":1,"message":"187","line":130,"column":13,"nodeType":"185","messageId":"186","endLine":130,"endColumn":17},{"ruleId":"183","severity":1,"message":"214","line":6,"column":10,"nodeType":"185","messageId":"186","endLine":6,"endColumn":21},{"ruleId":"183","severity":1,"message":"199","line":2,"column":15,"nodeType":"185","messageId":"186","endLine":2,"endColumn":18},{"ruleId":"183","severity":1,"message":"199","line":2,"column":23,"nodeType":"185","messageId":"186","endLine":2,"endColumn":26},{"ruleId":"179","severity":1,"message":"215","line":24,"column":8,"nodeType":"181","endLine":24,"endColumn":10,"suggestions":"216"},{"ruleId":"179","severity":1,"message":"215","line":31,"column":8,"nodeType":"181","endLine":31,"endColumn":64,"suggestions":"217"},{"ruleId":"183","severity":1,"message":"199","line":2,"column":23,"nodeType":"185","messageId":"186","endLine":2,"endColumn":26},{"ruleId":"183","severity":1,"message":"218","line":9,"column":10,"nodeType":"185","messageId":"186","endLine":9,"endColumn":20},{"ruleId":"183","severity":1,"message":"219","line":9,"column":22,"nodeType":"185","messageId":"186","endLine":9,"endColumn":31},{"ruleId":"183","severity":1,"message":"220","line":12,"column":11,"nodeType":"185","messageId":"186","endLine":12,"endColumn":18},{"ruleId":"183","severity":1,"message":"221","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":16},{"ruleId":"183","severity":1,"message":"222","line":16,"column":13,"nodeType":"185","messageId":"186","endLine":16,"endColumn":20},{"ruleId":"179","severity":1,"message":"215","line":24,"column":8,"nodeType":"181","endLine":24,"endColumn":10,"suggestions":"223"},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["226"],"no-unused-vars","'st' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'userdata' is assigned a value but never used.","'Button' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'image'. Either include them or remove the dependency array.",["227"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'star' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Col' is defined but never used.","'createFriend' is defined but never used.","'Row' is defined but never used.","'fetchImages' is defined but never used.","React Hook useEffect has a missing dependency: 'image'. Either include it or remove the dependency array.",["228"],["229"],["230"],"'$host' is defined but never used.","'jwt_decode' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'getComments' is defined but never used.","React Hook useEffect has missing dependencies: 'image' and 'userId'. Either include them or remove the dependency array.",["231"],["232"],"'getImgNick' is defined but never used.","'dataParse' is defined but never used.","'history' is assigned a value but never used.","'ThemeBar' is defined but never used.","'imgList' is assigned a value but never used.",["233"],"no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"238","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"243","fix":"247"},"Update the dependencies array to be: [user]",{"range":"248","text":"249"},"Update the dependencies array to be: [id, image]",{"range":"250","text":"251"},"Update the dependencies array to be: [image]",{"range":"252","text":"253"},{"range":"254","text":"253"},"Update the dependencies array to be: [image, image.page, image.selectedFriend, image.selectedTheme]",{"range":"255","text":"256"},"Update the dependencies array to be: [image, userId]",{"range":"257","text":"258"},"Update the dependencies array to be: [image, image.page, image.selectedFriend, image.selectedTheme, userId]",{"range":"259","text":"260"},{"range":"261","text":"258"},[642,644],"[user]",[841,843],"[id, image]",[758,760],"[image]",[882,884],[1114,1170],"[image, image.page, image.selectedFriend, image.selectedTheme]",[1011,1013],"[image, userId]",[1233,1289],"[image, image.page, image.selectedFriend, image.selectedTheme, userId]",[913,915]]