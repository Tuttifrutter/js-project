[{"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\index.js":"1","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\App.js":"2","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\store\\UserStore.js":"3","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\AppRouter.js":"4","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\NavBar.js":"5","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\http\\userAPI.js":"6","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\routes.js":"7","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\http\\index.js":"8","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\utils\\consts.js":"9","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Auth.js":"10","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Admin.js":"11","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\Pages.js":"12","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\ImagePage.js":"13","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\ImageList.js":"14","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\ImageItem.js":"15","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\ThemeBar.js":"16","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\FriendBar.js":"17","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\modals\\AddTheme.js":"18","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\modals\\AddFriend.js":"19","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\modals\\CreatePost.js":"20","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Gallery.js":"21","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\store\\ImageStore.js":"22","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\http\\imageAPI.js":"23","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\CommentList.js":"24","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\CommentItem.js":"25","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\CommentAddForm.js":"26","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\UserPage.js":"27","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\UserInfoItem.js":"28","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Favourite.js":"29"},{"size":457,"mtime":1649520875300,"results":"30","hashOfConfig":"31"},{"size":909,"mtime":1648588061716,"results":"32","hashOfConfig":"31"},{"size":401,"mtime":1611985807000,"results":"33","hashOfConfig":"31"},{"size":801,"mtime":1648406976614,"results":"34","hashOfConfig":"31"},{"size":4289,"mtime":1650466314277,"results":"35","hashOfConfig":"31"},{"size":2526,"mtime":1650293993174,"results":"36","hashOfConfig":"31"},{"size":936,"mtime":1650132726054,"results":"37","hashOfConfig":"31"},{"size":407,"mtime":1611985807000,"results":"38","hashOfConfig":"31"},{"size":311,"mtime":1650132645859,"results":"39","hashOfConfig":"31"},{"size":6012,"mtime":1650205918851,"results":"40","hashOfConfig":"31"},{"size":1114,"mtime":1650300982099,"results":"41","hashOfConfig":"31"},{"size":796,"mtime":1648590194624,"results":"42","hashOfConfig":"31"},{"size":2647,"mtime":1649623639821,"results":"43","hashOfConfig":"31"},{"size":683,"mtime":1649530874344,"results":"44","hashOfConfig":"31"},{"size":2527,"mtime":1650122399887,"results":"45","hashOfConfig":"31"},{"size":780,"mtime":1648590229286,"results":"46","hashOfConfig":"31"},{"size":803,"mtime":1648644200790,"results":"47","hashOfConfig":"31"},{"size":1375,"mtime":1648417858685,"results":"48","hashOfConfig":"31"},{"size":1354,"mtime":1648417858681,"results":"49","hashOfConfig":"31"},{"size":3822,"mtime":1650301163774,"results":"50","hashOfConfig":"31"},{"size":1674,"mtime":1650296675832,"results":"51","hashOfConfig":"31"},{"size":1727,"mtime":1650133748295,"results":"52","hashOfConfig":"31"},{"size":5991,"mtime":1650467455805,"results":"53","hashOfConfig":"31"},{"size":766,"mtime":1649528740198,"results":"54","hashOfConfig":"31"},{"size":1470,"mtime":1650454397310,"results":"55","hashOfConfig":"31"},{"size":1750,"mtime":1650122210042,"results":"56","hashOfConfig":"31"},{"size":2013,"mtime":1650298470765,"results":"57","hashOfConfig":"31"},{"size":1629,"mtime":1650231595552,"results":"58","hashOfConfig":"31"},{"size":1228,"mtime":1650466703411,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"6r5e2l",{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"62"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"62"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\index.js",[],["133","134"],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\App.js",["135"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\n\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n        <div className='App'>\n        <NavBar />\n        <AppRouter />\n        </div>\n          \n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\store\\UserStore.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\NavBar.js",["136"],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\http\\userAPI.js",["137","138","139"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const registration = async (email, password, first_name, second_name, nick_name, birthday) => {\n    const {data} = await $host.post('api/user/registration', {email, password,first_name, second_name, nick_name, birthday, role: 'ADMIN'})\n    localStorage.setItem('token', data.token)\n    return jwt_decode(data.token)\n}\n\nexport const login = async (email, password) => {\n    const {data} = await $host.post('api/user/login', {email, password})\n    localStorage.setItem('token', data.token)\n    return jwt_decode(data.token)\n}\n\nexport const check = async () => {\n    const {data} = await $authHost.get('api/user/auth' )\n    localStorage.setItem('token', data.token)\n    return jwt_decode(data.token)\n}\n\nexport const info = async (email) => {\n    const {data} = await $host.post('api/user/info', {email})\n    return data\n}\n\nexport const userInfo = async (userId) => {\n     const {data} = await $host.post('api/user/userinfo', {userId})\n     const res = \"nick='\"+data.nick_name+\"' img='\"+data.img+\"'\";\n     return res\n}\n\nexport const getUserInfo = async (userId) => {\n    const {data} = await $host.post('api/user/userinfo', {userId})\n    return data\n}\n\nexport const subscribe = async(userId, subuserId)=>{\n    const {data} = await $host.post('api/subscribe', {userId, subuserId})    // подписка\n    return data\n}\n\nexport const getSubscribesName= async (userId) => {\n    return await $authHost.get('api/subscribe/', {params:{userId}})      //получение списка юзеров на которые подписан пользователь\n}\n\nexport const getSubscribersId= async (subuserId) => {\n    const {data} = await $authHost.get('api/subscribe/rs', {params:{subuserId}})      //получение списка id юзеров которые подписаны на пользователя\n    return data\n}\n\nexport const subscribeOrNot= async (userId, subuserId) => {\n    const {data} = await $authHost.get('api/subscribe/ornot', {params:{userId, subuserId}})      //получаем true если user подписан на subuser\n    return data\n}\n\nexport const subButton = async (value) =>{ \n    let res;\n    if(value == \"*\"){\n        res = \"Изменить\"\n    }else if(value == true){\n        res = \"Вы подписаны\"\n    }else if(value == false){\n        res = \"Подписаться\"\n    }else{\n        res = \"Опачки\"\n    }\n\n    document.getElementById(\"subbtn\").innerHTML=res;\n    return res\n}\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\routes.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\http\\index.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\utils\\consts.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Auth.js",["140","141"],"import React, {useContext, useState} from 'react';\nimport {Container, Form} from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, GALLERY_ROUTE} from \"../utils/consts\";\nimport {login, registration, info} from \"../http/userAPI\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\n\nconst Auth = observer(() => {\n    const {user} = useContext(Context)\n    const location = useLocation()\n    const history = useHistory()\n    const isLogin = location.pathname === LOGIN_ROUTE\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [first_name, setFirstName] = useState('')\n    const [second_name, setSecondName] = useState('')\n    const [nick_name, setNickName] = useState('')\n    const [birthday, setBirthday] = useState('')\n\n    const click = async () => {\n        try {\n            let data;\n            let userdata;\n            if (isLogin) {\n                data = await login(email, password);\n                userdata = await info(email).then(userdata=>{                                   \n                    localStorage.setItem('userId', userdata.userinfo.id);\n                    localStorage.setItem('userName', userdata.userinfo.nick_name);\n                    localStorage.setItem('userAvatar',userdata.userinfo.img);\n                });\n            } else {\n                data = await registration(email, password, first_name, second_name, nick_name, birthday);\n                userdata = await info(email).then(userdata=>{                                   \n                    localStorage.setItem('userId', userdata.userinfo.id);\n                    localStorage.setItem('userName', userdata.userinfo.nick_name);\n                    localStorage.setItem('userAvatar',userdata.userinfo.img);\n                });\n            }\n            user.setUser(user)\n            user.setIsAuth(true)\n                history.push(GALLERY_ROUTE)\n        } catch (e) {\n            alert(e.response.data.message);\n            console.error(e.response.data.message);\n        }\n\n    }\n\n    return (\n        <Container\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{height: window.innerHeight - 54}}\n        >\n            <Card style={{width: 600}} className=\"p-5\">\n                <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : \"Регистрация\"}</h2>\n                <Form className=\"d-flex flex-column\">\n                    {isLogin ?\n                    <div>\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш email...\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш пароль...\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                    </div> :\n                    <div>\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш email...\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш пароль...\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Имя\"\n                        value={first_name}\n                        onChange={e => setFirstName(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Фамилия\"\n                        value={second_name}\n                        onChange={e => setSecondName(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"НИК\"\n                        value={nick_name}\n                        onChange={e => setNickName(e.target.value)}\n                    />\n                    <Form.Control\n                         type=\"date\"\n                         className=\"mt-3\"\n                         placeholder=\"Дата рождения\"\n                         value={birthday}\n                         onChange={(e) => setBirthday(e.target.value)}\n                    />\n                    </div>}\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n                        {isLogin ?\n                            <div>\n                                Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n                            </div>\n                            :\n                            <div>\n                                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n                            </div>\n                        }\n                        <Button\n                            variant={\"outline-success\"}\n                            onClick={click}\n                        >\n                            {isLogin ? 'Войти' : 'Регистрация'}\n                        </Button>\n                    </Row>\n\n                </Form>\n            </Card>\n        </Container>\n    );\n});\n\nexport default Auth;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Admin.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\Pages.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\ImagePage.js",["142","143","144","145","146"],"import React, {useEffect, useState, useContext} from 'react';\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\nimport bigStar from '../assets/bigStar.png'\nimport {useParams} from 'react-router-dom'\nimport {fetchOneImage, getComments, dataParse} from \"../http/imageAPI\";\nimport {Context} from \"../index\";\nimport CommentList from '../components/CommentList';\nimport CommentAddForm from '../components/CommentAddForm';\nimport { observer } from 'mobx-react-lite';\n\nconst ImagePage  = observer(() => {\n    const [imagel, setImage] = useState({info: []})\n    const {id} = useParams()\n    const {image} = useContext(Context)\n\n    useEffect(() => {\n        fetchOneImage(id).then(data => setImage(data));\n        getComments(id).then(data => image.setComments(data));\n        localStorage.setItem(\"ChoosenImgId\",id);\n    }, [])\n\n    return (\n        <Container className=\"mt-3\">\n            <Row>\n                <Col md={7}>\n                    <Image width={600} height={600} src={process.env.REACT_APP_API_URL + imagel.img}/>\n                </Col>\n                <Col md={1}>\n                    <Row className=\"d-flex flex-column align-items-center\">\n                        <h2>LIKE</h2>\n                        <div\n                            className=\"d-flex align-items-center justify-content-center\"\n                            style={{background: `url(${bigStar}) no-repeat center center`, width:96, height: 96, backgroundSize: 'cover', fontSize:64}}\n                        >\n                            {imagel.like_count}\n                        </div>\n                    </Row>\n                </Col>\n                <Col md={4}>\n                    <Row className=\"d-flex flex-column align-items-center\">\n                        <h2>DISLIKE</h2>\n                        <div\n                            className=\"d-flex align-items-center justify-content-center\"\n                            style={{background: `url(${bigStar}) no-repeat center center`, width:96, height: 96, backgroundSize: 'cover', fontSize:64}}\n                        >\n                            {imagel.dislike_count}\n                        </div>\n                    </Row>\n                    <h1></h1>\n                    <Row><h5><div>{imagel.text}</div></h5></Row>\n                    \n                </Col>\n                \n            </Row>\n            <h7>{dataParse(imagel.createdAt)}</h7>\n            <Col md={2}>\n            <h2>COMMENTS</h2>   \n                <CommentAddForm/>\n                <h1></h1>   \n                    <CommentList/>\n            </Col>\n        </Container>\n    );\n})\n\nexport default ImagePage;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\ImageList.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\ImageItem.js",["147","148","149"],"import React from 'react';\nimport {Card, Col} from \"react-bootstrap\";\nimport Image from \"react-bootstrap/Image\";\nimport star from '../assets/star.png'\nimport styles from \"./Main/Card.module.css\"\nimport {useHistory} from \"react-router-dom\"\nimport {IMAGE_ROUTE, USERPAGE_ROUTE} from \"../utils/consts\";\nimport {dis_like} from \"../http/imageAPI\";\nimport { getImgNick } from '../http/imageAPI';\n\nconst ImageItem = ({image, user}) => {\n    const history = useHistory()\n    return (\n            <Card style={{width: 150, cursor: 'pointer'}} border={\"light\"}>\n            <div className={styles.Card}>\n            <div className={styles.Card__header} >\n                <Image id = {\"userImg\"+image.id} className={styles.Card__userLogo} onClick={(event) => {localStorage.setItem(\"choosenUserId\", image.userId);  history.push(USERPAGE_ROUTE + '/' + image.userId)}} />\n                <div clasName={styles.Card_userDate}>\n                    <div id = {\"nickName\"+image.id}className={styles.Card__userName}>{getImgNick(image.id, \"imgUserInfo\")} </div>\n                    <div className={styles.Card__userPosition}>{image.location}</div>\n                </div>\n                <div className={styles.Card__burger}>\n                . . .\n                </div>\n            </div>\n            <Col md={-3} onClick={(event) => {history.push(IMAGE_ROUTE + '/' + image.id)}}>\n            <div className={styles.Card__content}><Image width={614} height={614} src={process.env.REACT_APP_API_URL + image.img}/></div>\n            </Col>\n            <div className={styles.Card__communication}>\n        \n                <span id = {\"lbtn\"+image.id}  onClick={ like =>{dis_like(image.id, localStorage.getItem('userId'), '1'); }}>\n                <a class=\"material-icons\">thumb_up </a>                  \n                                                         \n                </span>\n                  \n                <span id = {\"likeNum\"+image.id}>{image.like_count}</span>\n                <span id = {\"dbtn\"+image.id} onClick={dislike => {dis_like(image.id, localStorage.getItem('userId'), '0'); }}>\n                <a class=\"material-icons\">thumb_down </a>\n                </span>\n                <span id={\"dislikeNum\"+image.id}>{image.dislike_count}</span>    \n                  \n                <span class=\"material-icons\">\n                    send\n                </span>\n                <span>0</span> \n                <div>{image.text}</div>\n            </div>\n        </div>\n    </Card>\n        \n    );\n};\n\nexport default ImageItem;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\ThemeBar.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\FriendBar.js",["150"],"import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst FriendBar = observer(() => {\n    const {image} = useContext(Context)\n    return (      \n        <ListGroup>                             \n            {image.friends.map(friend =>\n                <ListGroup.Item\n                    style={{cursor: 'pointer'}}\n                    active={friend.id === image.selectedFriend.id}\n                    onClick={() => image.setSelectedFriend(friend)}\n                    key={friend.id}\n                >\n                    {friend.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default FriendBar;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\modals\\AddTheme.js",["151"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createTheme, createFriend} from \"../../http/imageAPI\";\n\nconst CreateTheme = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addTheme = () => {\n        createTheme({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить тему\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название темы\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addTheme}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateTheme;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\modals\\AddFriend.js",[],["152","153"],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\modals\\CreatePost.js",["154","155","156","157"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createImage, fetchThemes, fetchImages, fetchFriends} from \"../../http/imageAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateImage = observer(({show, onHide}) => {\n    const {image} = useContext(Context)\n    const [name, setName] = useState('')\n    const [text, setText] = useState('')//\n    const [location, setLocation] = useState('') //\n    const [file, setFile] = useState(null)\n\n    useEffect(() => {\n        fetchFriends().then(data => image.setFriends(data))\n        fetchThemes().then(data => image.setThemes(data))\n    }, [])\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addImage = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('img', file)\n        formData.append('location', location)\n        formData.append('text', text)\n        formData.append('themeId', image.selectedTheme.id)\n        formData.append('friendId', localStorage.getItem(\"userId\"))\n        formData.append('userId', localStorage.getItem(\"userId\"))\n        createImage(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить изоображение\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{image.selectedTheme.name || \"Выберите тему\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {image.themes.map(theme =>\n                                <Dropdown.Item\n                                    onClick={() => image.setSelectedTheme(theme)}\n                                    key={theme.id}\n                                >\n                                    {theme.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название изоображения\"\n                    />\n                    <Form.Control\n                        value={location}\n                        onChange={e => setLocation(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваше местоположение\"\n                    />\n                    <Form.Control\n                        value={text}\n                        onChange={e => setText(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите подпись к изоображению\"\n                    />\n\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addImage}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateImage;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Gallery.js",["158","159"],"import React, {useContext, useEffect} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport FriendBar from \"../components/FriendBar\";\nimport ThemeBar from \"../components/ThemeBar\";\nimport ImageList from \"../components/ImageList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchThemes, fetchImages} from \"../http/imageAPI\";\nimport {getSubscribesName} from \"../http/userAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Gallery = observer(() => {\n    const {image} = useContext(Context)\n    useEffect(() => {\n        getSubscribesName(localStorage.getItem(\"userId\")).then(data => image.setFriends(data.data));\n        fetchThemes().then(data => image.setThemes(data))\n        fetchImages(null, null, 1, null, 2).then(data => {\n            image.setImages(data.rows)\n            image.setTotalCount(data.count)\n        })\n    }, [])\n\n    useEffect(() => {\n        console.log(image.selectedFriend.id);\n        fetchImages(image.selectedFriend.id, image.selectedTheme.id, image.page,null, 2).then(data => {\n            image.setImages(data.rows)\n            image.setTotalCount(data.count)\n        })\n    }, [image.page, image.selectedFriend, image.selectedTheme,])\n\n\n\n    return (\n        <Container>\n            <Row className=\"mt-3\">\n                <Col md={2}>\n                    <FriendBar/>\n                </Col>\n                <Col md={2}>\n                    <ThemeBar/>\n                    <ImageList/>\n                    <Pages/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Gallery;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\store\\ImageStore.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\http\\imageAPI.js",["160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179"],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\CommentList.js",["180"],"import React, {useContext} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {Row} from \"react-bootstrap\";\r\nimport CommentItem from \"./CommentItem.js\";\r\nimport { getComments } from '../http/imageAPI';\r\nimport { userInfo } from '../http/userAPI';\r\n\r\nconst CommentList = observer(() => {\r\n    const {image} = useContext(Context);\r\n    \r\n    return (\r\n        <Row className=\"d-flex\">\r\n            {\r\n            image.comments.map(comment =>\r\n                <CommentItem key={comment.id} comment={comment} user={\r\n                    userInfo(comment.userId).then(data =>localStorage.setItem(\"comUserInfo\"+comment.id, data))}/>\r\n            )\r\n            }\r\n        </Row>\r\n    );\r\n});\r\n\r\nexport default CommentList;","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\CommentItem.js",["181"],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\CommentAddForm.js",["182"],"import React from 'react';\r\nimport {Button, Card, Col} from \"react-bootstrap\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport styles from \"./Comment/Card.module.css\"\r\nimport { Image } from 'react-bootstrap';\r\nimport {getUserProfile, sendComment} from '../http/imageAPI';\r\nimport { USERPAGE_ROUTE } from '../utils/consts';\r\nconst CommentAddForm = () => {\r\n    const history = useHistory()\r\n    const userId = localStorage.getItem(\"userId\");\r\n    return (\r\n            <Card style={{width: 150, cursor: 'pointer'}} border={\"light\"}>\r\n            <div className={styles.Card}>\r\n            <div className={styles.Card_header}>\r\n            <Image id = {\"addComUserImg\"} className={styles.Card__userLogo} onClick={(event) => {localStorage.setItem(\"choosenUserId\", userId);  history.push(USERPAGE_ROUTE + '/' + userId)}}/>\r\n            <div clasName={styles.Card_userDate}>\r\n                    <div id = {\"addComUserNick\"}className={styles.Card__userName}>{} </div>\r\n                    <div className={styles.Card__userPosition}>{getUserProfile(\"addComUserNick\",\"addComUserImg\")}</div>\r\n                </div>\r\n            <div className={styles.Card__burger}>\r\n                . . .\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.Card__communication}>\r\n                <div><textarea id =\"input\" type=\"text\" placeholder=\"Введите свой комментарий\" className={styles.Сomment__add}/></div>\r\n            </div>\r\n            <div ><Button className={styles.Comment__btn} onClick={()=>sendComment(localStorage.getItem(\"ChoosenImgId\"), localStorage.getItem(\"userId\"))}>SEND</Button></div>\r\n\r\n        </div>\r\n    </Card>\r\n            \r\n            \r\n    );\r\n};\r\n\r\nexport default CommentAddForm;\r\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\UserPage.js",["183","184","185"],"import React, {useContext, useEffect} from 'react';\r\nimport {Container} from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport UserInfoItem from '../components/UserInfoItem';\r\nimport ThemeBar from \"../components/ThemeBar\";\r\nimport ImageList from \"../components/ImageList\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {fetchThemes, fetchImages} from \"../http/imageAPI\";\r\nimport Pages from \"../components/Pages\";\r\nimport { getUserInfo, subscribeOrNot, subButton } from '../http/userAPI';\r\n\r\nconst UserPage = observer(() => {\r\n    const {image} = useContext(Context)\r\n    useEffect(() => {\r\n        const userId = localStorage.getItem(\"choosenUserId\");\r\n        console.log(userId);\r\n        fetchThemes().then(data => image.setThemes(data))\r\n        getUserInfo(userId).then(data => image.setUserInfo(data))\r\n        fetchImages(null, null, 1, userId, 2).then(data => {\r\n            image.setImages(data.rows)\r\n            image.setTotalCount(data.count)\r\n        })\r\n        const authId = localStorage.getItem(\"userId\");\r\n        if(authId != userId){\r\n            subscribeOrNot(authId, userId).then(data=>{subButton(data)});\r\n        }else {\r\n            subButton(\"*\");\r\n        }\r\n\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const userId = localStorage.getItem(\"choosenUserId\");\r\n        fetchImages(null, image.selectedTheme.id, image.page,userId, 2).then(data => {\r\n            image.setImages(data.rows)\r\n            image.setTotalCount(data.count)\r\n        })\r\n    }, [image.page, image.selectedFriend, image.selectedTheme,])\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-3\">\r\n                <Col md={2}>\r\n                    <UserInfoItem user ={image.getUserInfo}/>\r\n                    <ThemeBar/>\r\n                    <ImageList/>\r\n                    <Pages/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default UserPage;\r\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\UserInfoItem.js",["186","187","188","189"],"import React from 'react';\r\nimport {Button, Card, Col} from \"react-bootstrap\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport styles from \"./UserInfo/Card.module.css\"\r\nimport { Image } from 'react-bootstrap';\r\nimport { getImgNick, dataParse } from '../http/imageAPI';\r\nimport { subButton, subscribe } from '../http/userAPI';\r\n\r\nconst UserInfoItem = ({user}) => {\r\n    const history = useHistory()\r\n    const myuserId = localStorage.getItem(\"userId\")\r\n    return (  \r\n            <Card style={{width: 150, cursor: 'pointer'}} border={\"light\"}>\r\n            <div className={styles.Card}>\r\n            <div className={styles.Card__border}>\r\n            <div className={styles.Card_header}>\r\n            <Image id = {\"userImg\"} className={styles.Card__userLogo} src={process.env.REACT_APP_API_URL + user.img}/>\r\n            <div className={styles.Card_userDate}>\r\n                    <div id = {\"nickName\"}className={styles.Card__userName}>{user.nick_name} </div> \r\n                    <div className={styles.Card__userPosition}>{user.first_name+\" \"+user.second_name}</div>\r\n                </div>\r\n                <div className={styles.Card__communication}>\r\n                <div>{user.email}</div>\r\n                <div><Button id = {\"subbtn\"} className={styles.Subscribe__btn} onClick={()=>subscribe(myuserId, user.id).then(data=>subButton(data))}>button</Button></div>\r\n                   \r\n            </div>\r\n            <div className={styles.Card__status}>{\"Статус: \"+ user.status}</div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </Card>\r\n        \r\n    );\r\n};\r\n\r\nexport default UserInfoItem;\r\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Favourite.js",["190","191","192"],{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":20,"column":8,"nodeType":"199","endLine":20,"endColumn":10,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":14,"column":8,"nodeType":"203","messageId":"204","endLine":14,"endColumn":10},{"ruleId":"205","severity":1,"message":"206","line":59,"column":14,"nodeType":"207","messageId":"208","endLine":59,"endColumn":16},{"ruleId":"205","severity":1,"message":"206","line":61,"column":20,"nodeType":"207","messageId":"208","endLine":61,"endColumn":22},{"ruleId":"205","severity":1,"message":"206","line":63,"column":20,"nodeType":"207","messageId":"208","endLine":63,"endColumn":22},{"ruleId":"201","severity":1,"message":"209","line":36,"column":17,"nodeType":"203","messageId":"204","endLine":36,"endColumn":21},{"ruleId":"201","severity":1,"message":"210","line":37,"column":17,"nodeType":"203","messageId":"204","endLine":37,"endColumn":25},{"ruleId":"201","severity":1,"message":"211","line":2,"column":9,"nodeType":"203","messageId":"204","endLine":2,"endColumn":15},{"ruleId":"201","severity":1,"message":"212","line":2,"column":17,"nodeType":"203","messageId":"204","endLine":2,"endColumn":21},{"ruleId":"197","severity":1,"message":"213","line":20,"column":8,"nodeType":"199","endLine":20,"endColumn":10,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":49,"column":21,"nodeType":"217","endLine":49,"endColumn":25},{"ruleId":"215","severity":1,"message":"216","line":59,"column":17,"nodeType":"217","endLine":59,"endColumn":21},{"ruleId":"201","severity":1,"message":"218","line":4,"column":8,"nodeType":"203","messageId":"204","endLine":4,"endColumn":12},{"ruleId":"219","severity":1,"message":"220","line":32,"column":17,"nodeType":"217","endLine":32,"endColumn":43},{"ruleId":"219","severity":1,"message":"220","line":38,"column":17,"nodeType":"217","endLine":38,"endColumn":43},{"ruleId":"201","severity":1,"message":"221","line":4,"column":8,"nodeType":"203","messageId":"204","endLine":4,"endColumn":11},{"ruleId":"201","severity":1,"message":"222","line":4,"column":22,"nodeType":"203","messageId":"204","endLine":4,"endColumn":34},{"ruleId":"193","replacedBy":"223"},{"ruleId":"195","replacedBy":"224"},{"ruleId":"201","severity":1,"message":"225","line":3,"column":33,"nodeType":"203","messageId":"204","endLine":3,"endColumn":36},{"ruleId":"201","severity":1,"message":"221","line":3,"column":38,"nodeType":"203","messageId":"204","endLine":3,"endColumn":41},{"ruleId":"201","severity":1,"message":"226","line":5,"column":35,"nodeType":"203","messageId":"204","endLine":5,"endColumn":46},{"ruleId":"197","severity":1,"message":"227","line":18,"column":8,"nodeType":"199","endLine":18,"endColumn":10,"suggestions":"228"},{"ruleId":"197","severity":1,"message":"227","line":23,"column":8,"nodeType":"199","endLine":23,"endColumn":10,"suggestions":"229"},{"ruleId":"197","severity":1,"message":"227","line":31,"column":8,"nodeType":"199","endLine":31,"endColumn":64,"suggestions":"230"},{"ruleId":"201","severity":1,"message":"231","line":1,"column":20,"nodeType":"203","messageId":"204","endLine":1,"endColumn":25},{"ruleId":"201","severity":1,"message":"232","line":2,"column":8,"nodeType":"203","messageId":"204","endLine":2,"endColumn":18},{"ruleId":"205","severity":1,"message":"206","line":49,"column":16,"nodeType":"207","messageId":"208","endLine":49,"endColumn":18},{"ruleId":"205","severity":1,"message":"233","line":79,"column":86,"nodeType":"207","messageId":"208","endLine":79,"endColumn":88},{"ruleId":"205","severity":1,"message":"233","line":104,"column":26,"nodeType":"207","messageId":"208","endLine":104,"endColumn":28},{"ruleId":"205","severity":1,"message":"206","line":116,"column":14,"nodeType":"207","messageId":"208","endLine":116,"endColumn":16},{"ruleId":"205","severity":1,"message":"206","line":119,"column":16,"nodeType":"207","messageId":"208","endLine":119,"endColumn":18},{"ruleId":"205","severity":1,"message":"206","line":122,"column":28,"nodeType":"207","messageId":"208","endLine":122,"endColumn":30},{"ruleId":"205","severity":1,"message":"206","line":122,"column":59,"nodeType":"207","messageId":"208","endLine":122,"endColumn":61},{"ruleId":"205","severity":1,"message":"206","line":126,"column":28,"nodeType":"207","messageId":"208","endLine":126,"endColumn":30},{"ruleId":"205","severity":1,"message":"206","line":130,"column":18,"nodeType":"207","messageId":"208","endLine":130,"endColumn":20},{"ruleId":"205","severity":1,"message":"206","line":130,"column":31,"nodeType":"207","messageId":"208","endLine":130,"endColumn":33},{"ruleId":"205","severity":1,"message":"233","line":130,"column":44,"nodeType":"207","messageId":"208","endLine":130,"endColumn":46},{"ruleId":"205","severity":1,"message":"206","line":131,"column":35,"nodeType":"207","messageId":"208","endLine":131,"endColumn":37},{"ruleId":"205","severity":1,"message":"233","line":136,"column":25,"nodeType":"207","messageId":"208","endLine":136,"endColumn":27},{"ruleId":"205","severity":1,"message":"206","line":136,"column":38,"nodeType":"207","messageId":"208","endLine":136,"endColumn":40},{"ruleId":"205","severity":1,"message":"233","line":136,"column":51,"nodeType":"207","messageId":"208","endLine":136,"endColumn":53},{"ruleId":"205","severity":1,"message":"233","line":166,"column":15,"nodeType":"207","messageId":"208","endLine":166,"endColumn":17},{"ruleId":"205","severity":1,"message":"233","line":166,"column":47,"nodeType":"207","messageId":"208","endLine":166,"endColumn":49},{"ruleId":"201","severity":1,"message":"209","line":171,"column":13,"nodeType":"203","messageId":"204","endLine":171,"endColumn":17},{"ruleId":"201","severity":1,"message":"234","line":6,"column":10,"nodeType":"203","messageId":"204","endLine":6,"endColumn":21},{"ruleId":"201","severity":1,"message":"221","line":2,"column":15,"nodeType":"203","messageId":"204","endLine":2,"endColumn":18},{"ruleId":"201","severity":1,"message":"221","line":2,"column":23,"nodeType":"203","messageId":"204","endLine":2,"endColumn":26},{"ruleId":"205","severity":1,"message":"233","line":26,"column":19,"nodeType":"207","messageId":"208","endLine":26,"endColumn":21},{"ruleId":"197","severity":1,"message":"227","line":33,"column":8,"nodeType":"199","endLine":33,"endColumn":10,"suggestions":"235"},{"ruleId":"197","severity":1,"message":"227","line":41,"column":8,"nodeType":"199","endLine":41,"endColumn":64,"suggestions":"236"},{"ruleId":"201","severity":1,"message":"221","line":2,"column":23,"nodeType":"203","messageId":"204","endLine":2,"endColumn":26},{"ruleId":"201","severity":1,"message":"237","line":6,"column":10,"nodeType":"203","messageId":"204","endLine":6,"endColumn":20},{"ruleId":"201","severity":1,"message":"238","line":6,"column":22,"nodeType":"203","messageId":"204","endLine":6,"endColumn":31},{"ruleId":"201","severity":1,"message":"239","line":10,"column":11,"nodeType":"203","messageId":"204","endLine":10,"endColumn":18},{"ruleId":"201","severity":1,"message":"240","line":5,"column":8,"nodeType":"203","messageId":"204","endLine":5,"endColumn":16},{"ruleId":"201","severity":1,"message":"241","line":16,"column":13,"nodeType":"203","messageId":"204","endLine":16,"endColumn":20},{"ruleId":"197","severity":1,"message":"242","line":24,"column":8,"nodeType":"199","endLine":24,"endColumn":10,"suggestions":"243"},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["246"],"no-unused-vars","'st' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'data' is assigned a value but never used.","'userdata' is assigned a value but never used.","'Button' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'image'. Either include them or remove the dependency array.",["247"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'star' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Col' is defined but never used.","'createFriend' is defined but never used.",["244"],["245"],"'Row' is defined but never used.","'fetchImages' is defined but never used.","React Hook useEffect has a missing dependency: 'image'. Either include it or remove the dependency array.",["248"],["249"],["250"],"'$host' is defined but never used.","'jwt_decode' is defined but never used.","Expected '!==' and instead saw '!='.","'getComments' is defined but never used.",["251"],["252"],"'getImgNick' is defined but never used.","'dataParse' is defined but never used.","'history' is assigned a value but never used.","'ThemeBar' is defined but never used.","'imgList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'image' and 'userId'. Either include them or remove the dependency array.",["253"],"no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"258","fix":"260"},{"desc":"261","fix":"262"},{"desc":"258","fix":"263"},{"desc":"261","fix":"264"},{"desc":"265","fix":"266"},"Update the dependencies array to be: [user]",{"range":"267","text":"268"},"Update the dependencies array to be: [id, image]",{"range":"269","text":"270"},"Update the dependencies array to be: [image]",{"range":"271","text":"272"},{"range":"273","text":"272"},"Update the dependencies array to be: [image, image.page, image.selectedFriend, image.selectedTheme]",{"range":"274","text":"275"},{"range":"276","text":"272"},{"range":"277","text":"275"},"Update the dependencies array to be: [image, userId]",{"range":"278","text":"279"},[642,644],"[user]",[841,843],"[id, image]",[758,760],"[image]",[960,962],[1238,1294],"[image, image.page, image.selectedFriend, image.selectedTheme]",[1295,1297],[1580,1636],[916,918],"[image, userId]"]