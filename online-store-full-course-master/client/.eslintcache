[{"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\index.js":"1","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\App.js":"2","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\store\\UserStore.js":"3","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\AppRouter.js":"4","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\NavBar.js":"5","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\http\\userAPI.js":"6","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\routes.js":"7","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\http\\index.js":"8","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\utils\\consts.js":"9","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Auth.js":"10","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Admin.js":"11","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\Pages.js":"12","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\ImagePage.js":"13","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\ImageList.js":"14","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\ImageItem.js":"15","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\ThemeBar.js":"16","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\FriendBar.js":"17","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\modals\\AddTheme.js":"18","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\modals\\AddFriend.js":"19","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\modals\\CreatePost.js":"20","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Gallery.js":"21","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\store\\ImageStore.js":"22","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\http\\imageAPI.js":"23"},{"size":457,"mtime":1648586551436,"results":"24","hashOfConfig":"25"},{"size":909,"mtime":1648588061716,"results":"26","hashOfConfig":"25"},{"size":401,"mtime":1611985807000,"results":"27","hashOfConfig":"25"},{"size":801,"mtime":1648406976614,"results":"28","hashOfConfig":"25"},{"size":3058,"mtime":1648589380009,"results":"29","hashOfConfig":"25"},{"size":786,"mtime":1648499861982,"results":"30","hashOfConfig":"25"},{"size":666,"mtime":1648418183839,"results":"31","hashOfConfig":"25"},{"size":407,"mtime":1611985807000,"results":"32","hashOfConfig":"25"},{"size":191,"mtime":1648407017651,"results":"33","hashOfConfig":"25"},{"size":5219,"mtime":1648593756754,"results":"34","hashOfConfig":"25"},{"size":1556,"mtime":1648408968619,"results":"35","hashOfConfig":"25"},{"size":796,"mtime":1648590194624,"results":"36","hashOfConfig":"25"},{"size":1907,"mtime":1648417858685,"results":"37","hashOfConfig":"25"},{"size":480,"mtime":1648644010536,"results":"38","hashOfConfig":"25"},{"size":1810,"mtime":1648591521206,"results":"39","hashOfConfig":"25"},{"size":780,"mtime":1648590229286,"results":"40","hashOfConfig":"25"},{"size":803,"mtime":1648644200790,"results":"41","hashOfConfig":"25"},{"size":1375,"mtime":1648417858685,"results":"42","hashOfConfig":"25"},{"size":1354,"mtime":1648417858681,"results":"43","hashOfConfig":"25"},{"size":4439,"mtime":1648506776041,"results":"44","hashOfConfig":"25"},{"size":1538,"mtime":1648592581659,"results":"45","hashOfConfig":"25"},{"size":1318,"mtime":1648596692418,"results":"46","hashOfConfig":"25"},{"size":1015,"mtime":1648596262988,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"6r5e2l",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"50"},"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\index.js",[],["104","105"],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\App.js",["106"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\n\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n        <div className='App'>\n        <NavBar />\n        <AppRouter />\n        </div>\n          \n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\store\\UserStore.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\NavBar.js",["107"],"import React, {useContext} from 'react';\nimport {Context} from \"../index\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport {NavLink} from \"react-router-dom\";\nimport {ADMIN_ROUTE, LOGIN_ROUTE, GALLERY_ROUTE} from \"../utils/consts\";\nimport {Button} from \"react-bootstrap\";\nimport {observer} from \"mobx-react-lite\";\nimport Container from \"react-bootstrap/Container\";\nimport {useHistory} from 'react-router-dom'\nimport styles from './Header/Header.module.css' \nimport st from './iconfont/material-icons.css'\n\nconst NavBar = observer(() => {\n    const {user} = useContext(Context)\n    const history = useHistory()\n\n    const logOut = () => {\n        user.setUser({})\n        user.setIsAuth(false)\n        localStorage.removeItem('token')\n    }\n\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            <Container>\n       \n            <nav className={styles.Header__logo}>PhotoApp</nav>\n            <div >\n            <input type=\"text\" placeholder=\"Поиск\" className={styles.Header__search}/>\n            <Button className='ml-2' variant={\"dark\"}>\n                Find\n            </Button>\n            </div>\n        \n            <div className={styles.Header__wrapper}>\n                <div className={styles.Header__item}>\n                    <span class=\"material-icons\">\n                        <NavLink to={GALLERY_ROUTE}>home</NavLink>\n                    </span>\n                </div> \n                <div className={styles.Header__item}>\n                    <span class=\"material-icons\">\n                        send\n                    </span>    \n                </div> \n                <div className={styles.Header__item}>\n                    <span class=\"material-icons\">\n                        explore\n                    </span>\n                </div> \n                <div className={styles.Header__item}>\n                    <span class=\"material-icons\">\n                        favorite\n                    </span>    \n                </div> \n                <div className={styles.Header__item}></div> \n                {user.isAuth ?\n                    <Nav className=\"ml-auto\">\n                        <Button\n                            variant={\"dark\"}\n                            onClick={() => history.push(ADMIN_ROUTE)}\n                        >\n                            Add\n                        </Button>\n                        <Button\n                            variant={\"dark\"}\n                            onClick={() => logOut()}\n                            className=\"ml-2\"\n                        >\n                            Logout\n                        </Button>\n                    </Nav>\n                    :\n                    <Nav className=\"ml-auto\" style={{color: 'white'}}>\n                        <Button variant={\"dark\"} onClick={() => history.push(LOGIN_ROUTE)}>Login</Button>\n                    </Nav>\n                }\n            </div>\n         \n                \n            </Container>\n        </Navbar>\n\n    );\n});\n\nexport default NavBar;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\http\\userAPI.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\routes.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\http\\index.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\utils\\consts.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Auth.js",["108"],"import React, {useContext, useState} from 'react';\nimport {Container, Form} from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, GALLERY_ROUTE} from \"../utils/consts\";\nimport {login, registration} from \"../http/userAPI\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\n\nconst Auth = observer(() => {\n    const {user} = useContext(Context)\n    const location = useLocation()\n    const history = useHistory()\n    const isLogin = location.pathname === LOGIN_ROUTE\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [first_name, setFirstName] = useState('')\n    const [second_name, setSecondName] = useState('')\n    const [nick_name, setNickName] = useState('')\n    const [birthday, setBirthday] = useState('')\n\n    const click = async () => {\n        try {\n            let data;\n            if (isLogin) {\n                data = await login(email, password);\n            } else {\n                data = await registration(email, password, first_name, second_name, nick_name, birthday);\n            }\n            user.setUser(user)\n            user.setIsAuth(true)\n            history.push(GALLERY_ROUTE)\n        } catch (e) {\n            alert(e.response.data.message)\n        }\n\n    }\n\n    return (\n        <Container\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{height: window.innerHeight - 54}}\n        >\n            <Card style={{width: 600}} className=\"p-5\">\n                <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : \"Регистрация\"}</h2>\n                <Form className=\"d-flex flex-column\">\n                    {isLogin ?\n                    <div>\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш email...\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш пароль...\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                    </div> :\n                    <div>\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш email...\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш пароль...\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Имя\"\n                        value={first_name}\n                        onChange={e => setFirstName(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Фамилия\"\n                        value={second_name}\n                        onChange={e => setSecondName(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"НИК\"\n                        value={nick_name}\n                        onChange={e => setNickName(e.target.value)}\n                    />\n                    <Form.Control\n                         type=\"date\"\n                         className=\"mt-3\"\n                         placeholder=\"Дата рождения\"\n                         value={birthday}\n                         onChange={(e) => setBirthday(e.target.value)}\n                    />\n                    </div>}\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n                        {isLogin ?\n                            <div>\n                                Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n                            </div>\n                            :\n                            <div>\n                                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n                            </div>\n                        }\n                        <Button\n                            variant={\"outline-success\"}\n                            onClick={click}\n                        >\n                            {isLogin ? 'Войти' : 'Регистрация'}\n                        </Button>\n                    </Row>\n\n                </Form>\n            </Card>\n        </Container>\n    );\n});\n\nexport default Auth;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Admin.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\Pages.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\ImagePage.js",["109","110","111"],"import React, {useEffect, useState} from 'react';\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\nimport bigStar from '../assets/bigStar.png'\nimport {useParams} from 'react-router-dom'\nimport {fetchOneImage} from \"../http/imageAPI\";\n\nconst ImagePage = () => {\n    const [image, setImage] = useState({info: []})\n    const {id} = useParams()\n    useEffect(() => {\n        fetchOneImage(id).then(data => setImage(data))\n    }, [])\n\n    return (\n        <Container className=\"mt-3\">\n            <Row>\n                <Col md={4}>\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + image.img}/>\n                </Col>\n                <Col md={4}>\n                    <Row className=\"d-flex flex-column align-items-center\">\n                        <h2>{image.name}</h2>\n                        <div\n                            className=\"d-flex align-items-center justify-content-center\"\n                            style={{background: `url(${bigStar}) no-repeat center center`, width:24, height: 24, backgroundSize: 'cover', fontSize:64}}\n                        >\n                            {image.like_count}\n                        </div>\n                    </Row>\n                </Col>\n                <Col md={4}>\n                    <Row className=\"d-flex flex-column align-items-center\">\n                        <h2>{image.name}</h2>\n                        <div\n                            className=\"d-flex align-items-center justify-content-center\"\n                            style={{background: `url(${bigStar}) no-repeat center center`, width:24, height: 24, backgroundSize: 'cover', fontSize:64}}\n                        >\n                            {image.dislike_count}\n                        </div>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default ImagePage;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\ImageList.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\ImageItem.js",["112"],"import React from 'react';\nimport {Card, Col} from \"react-bootstrap\";\nimport Image from \"react-bootstrap/Image\";\nimport star from '../assets/star.png'\nimport styles from \"./Main/Card.module.css\"\nimport {useHistory} from \"react-router-dom\"\nimport {IMAGE_ROUTE} from \"../utils/consts\";\n\nconst ImageItem = ({image}) => {\n    const history = useHistory()\n    return (\n            <Card style={{width: 150, cursor: 'pointer'}} border={\"light\"}>\n            <div className={styles.Card}>\n            <div className={styles.Card__header}>\n                <div className={styles.Card__userLogo}></div>\n                <div clasName={styles.Card_userDate}>\n                    <div className={styles.Card__userName}>{image.name}</div>\n                    <div className={styles.Card__userPosition}>{image.location}</div>\n                </div>\n                <div className={styles.Card__burger}>\n                . . .\n                </div>\n            </div>\n            <Col md={-3} onClick={() => history.push(IMAGE_ROUTE + '/' + image.id)}>\n            <div className={styles.Card__content}><Image width={614} height={614} src={process.env.REACT_APP_API_URL + image.img}/></div>\n            </Col>\n            <div className={styles.Card__communication}>\n                <span class=\"material-icons\">\n                  favorite\n                </span>\n                <span>{image.like_count}</span>\n                <span class=\"material-icons\">\n                  favorite\n                </span>\n                <span>{image.dislike_count}</span>      \n                <span class=\"material-icons\">\n                    send\n                </span>\n                <span>0</span> \n                <div>{image.text}</div>\n            </div>\n        </div>\n    </Card>\n        \n    );\n};\n\nexport default ImageItem;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\ThemeBar.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\FriendBar.js",["113"],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\modals\\AddTheme.js",["114"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createTheme, createFriend} from \"../../http/imageAPI\";\n\nconst CreateTheme = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addTheme = () => {\n        createTheme({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить тему\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название темы\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addTheme}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateTheme;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\modals\\AddFriend.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\components\\modals\\CreatePost.js",["115","116","117","118"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createImage, fetchThemes, fetchImages, fetchFriends} from \"../../http/imageAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateImage = observer(({show, onHide}) => {\n    const {image} = useContext(Context)\n    const [name, setName] = useState('')\n    const [text, setText] = useState('')//\n    const [location, setLocation] = useState('') //\n    const [file, setFile] = useState(null)\n\n    useEffect(() => {\n        fetchFriends().then(data => image.setFriends(data))\n        fetchThemes().then(data => image.setThemes(data))\n    }, [])\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addImage = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('img', file)\n        formData.append('location', location)\n        formData.append('text', text)\n        formData.append('themeId', image.selectedTheme.id)\n        formData.append('friendId', image.selectedFriend.id)\n        createImage(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить изоображение\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{image.selectedFriend.name || \"Выберите друга\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {image.friends.map(friend =>\n                                <Dropdown.Item\n                                    onClick={() => image.setSelectedFriend(friend)}\n                                    key={friend.id}\n                                >\n                                    {friend.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{image.selectedTheme.name || \"Выберите тему\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {image.themes.map(theme =>\n                                <Dropdown.Item\n                                    onClick={() => image.setSelectedTheme(theme)}\n                                    key={theme.id}\n                                >\n                                    {theme.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название изоображения\"\n                    />\n                    <Form.Control\n                        value={location}\n                        onChange={e => setLocation(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваше местоположение\"\n                    />\n                    <Form.Control\n                        value={text}\n                        onChange={e => setText(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите подпись к изоображению\"\n                    />\n\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addImage}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateImage;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\pages\\Gallery.js",["119","120"],"import React, {useContext, useEffect} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport FriendBar from \"../components/FriendBar\";\nimport ThemeBar from \"../components/ThemeBar\";\nimport ImageList from \"../components/ImageList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchThemes, fetchImages, fetchFriends} from \"../http/imageAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Gallery = observer(() => {\n    const {image} = useContext(Context)\n\n    useEffect(() => {\n        fetchFriends().then(data => image.setFriends(data))\n        fetchThemes().then(data => image.setThemes(data))\n        fetchImages(null, null, 1, 2).then(data => {\n            image.setImages(data.rows)\n            image.setTotalCount(data.count)\n        })\n    }, [])\n\n    useEffect(() => {\n        fetchImages(image.selectedFriend.id, image.selectedTheme.id, image.page, 2).then(data => {\n            image.setImages(data.rows)\n            image.setTotalCount(data.count)\n        })\n    }, [image.page, image.selectedFriend, image.selectedTheme,])\n\n    return (\n        <Container>\n            <Row className=\"mt-3\">\n                <Col md={9}>\n                    <FriendBar/>\n                </Col>\n                <Col md={9}>\n                    <ThemeBar/>\n                    <ImageList/>\n                    <Pages/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Gallery;\n","C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\store\\ImageStore.js",[],"C:\\Users\\sapeg\\OneDrive\\Рабочий стол\\СПП\\online-store-full-course-master\\online-store-full-course-master\\client\\src\\http\\imageAPI.js",["121","122"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createFriend = async (friend) => {\n    const {data} = await $authHost.post('api/friend', friend)\n    return data\n}\n\nexport const fetchFriends = async () => {\n    const {data} = await $authHost.get('api/friend')\n    return data\n}\n\nexport const createTheme = async (theme) => {\n    const {data} = await $authHost.post('api/theme', theme)\n    return data\n}\n\nexport const fetchThemes = async () => {\n    const {data} = await $authHost.get('api/theme', )\n    return data\n}\n\nexport const createImage = async (image) => {\n    const {data} = await $authHost.post('api/image', image)\n    return data\n}\n\nexport const fetchImages = async (friendId, themeId, page, limit= 5) => {\n    const {data} = await $authHost.get('api/image', {params: {\n        friendId, themeId, page, limit\n        }})\n    return data\n}\n\nexport const fetchOneImage = async (id) => {\n    const {data} = await $authHost.get('api/image/' + id)\n    return data\n}\n",{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":20,"column":8,"nodeType":"129","endLine":20,"endColumn":10,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":12,"column":8,"nodeType":"133","messageId":"134","endLine":12,"endColumn":10},{"ruleId":"131","severity":1,"message":"135","line":30,"column":17,"nodeType":"133","messageId":"134","endLine":30,"endColumn":21},{"ruleId":"131","severity":1,"message":"136","line":2,"column":9,"nodeType":"133","messageId":"134","endLine":2,"endColumn":15},{"ruleId":"131","severity":1,"message":"137","line":2,"column":17,"nodeType":"133","messageId":"134","endLine":2,"endColumn":21},{"ruleId":"127","severity":1,"message":"138","line":12,"column":8,"nodeType":"129","endLine":12,"endColumn":10,"suggestions":"139"},{"ruleId":"131","severity":1,"message":"140","line":4,"column":8,"nodeType":"133","messageId":"134","endLine":4,"endColumn":12},{"ruleId":"131","severity":1,"message":"141","line":4,"column":8,"nodeType":"133","messageId":"134","endLine":4,"endColumn":11},{"ruleId":"131","severity":1,"message":"142","line":4,"column":22,"nodeType":"133","messageId":"134","endLine":4,"endColumn":34},{"ruleId":"131","severity":1,"message":"143","line":3,"column":33,"nodeType":"133","messageId":"134","endLine":3,"endColumn":36},{"ruleId":"131","severity":1,"message":"141","line":3,"column":38,"nodeType":"133","messageId":"134","endLine":3,"endColumn":41},{"ruleId":"131","severity":1,"message":"144","line":5,"column":35,"nodeType":"133","messageId":"134","endLine":5,"endColumn":46},{"ruleId":"127","severity":1,"message":"145","line":18,"column":8,"nodeType":"129","endLine":18,"endColumn":10,"suggestions":"146"},{"ruleId":"127","severity":1,"message":"145","line":23,"column":8,"nodeType":"129","endLine":23,"endColumn":10,"suggestions":"147"},{"ruleId":"127","severity":1,"message":"145","line":30,"column":8,"nodeType":"129","endLine":30,"endColumn":64,"suggestions":"148"},{"ruleId":"131","severity":1,"message":"149","line":1,"column":20,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"150","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":18},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["153"],"no-unused-vars","'st' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'Button' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["154"],"'star' is defined but never used.","'Col' is defined but never used.","'createFriend' is defined but never used.","'Row' is defined but never used.","'fetchImages' is defined but never used.","React Hook useEffect has a missing dependency: 'image'. Either include it or remove the dependency array.",["155"],["156"],["157"],"'$host' is defined but never used.","'jwt_decode' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"162","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [user]",{"range":"167","text":"168"},"Update the dependencies array to be: [id]",{"range":"169","text":"170"},"Update the dependencies array to be: [image]",{"range":"171","text":"172"},{"range":"173","text":"172"},"Update the dependencies array to be: [image, image.page, image.selectedFriend, image.selectedTheme]",{"range":"174","text":"175"},[642,644],"[user]",[451,453],"[id]",[758,760],"[image]",[877,879],[1104,1160],"[image, image.page, image.selectedFriend, image.selectedTheme]"]